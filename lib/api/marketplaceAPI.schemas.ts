/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Marketplace API
 * Multi-vendor marketplace API ‚Äî Express, TypeScript, Prisma. Auto-generated from Zod schemas.
 * OpenAPI spec version: 1.0.0
 */
export interface AddToCartBody {
  /** @minLength 1 */
  productId: string;
  /**
   * @maximum 100
   */
  quantity: number;
}

export type AuthResponseUserRole = typeof AuthResponseUserRole[keyof typeof AuthResponseUserRole];


export const AuthResponseUserRole = {
  CUSTOMER: 'CUSTOMER',
  VENDOR: 'VENDOR',
  ADMIN: 'ADMIN',
  SUPER: 'SUPER',
} as const;

export type AuthResponseUserStoreId = string | null;

export type AuthResponseUserFirstName = string | null;

export type AuthResponseUserLastName = string | null;

export type AuthResponseUserPhone = string | null;

export type AuthResponseUserUpdatedAt = string | null;

export type AuthResponseUser = {
  id: string;
  email: string;
  role: AuthResponseUserRole;
  storeId: AuthResponseUserStoreId;
  firstName: AuthResponseUserFirstName;
  lastName: AuthResponseUserLastName;
  phone: AuthResponseUserPhone;
  createdAt: string;
  updatedAt: AuthResponseUserUpdatedAt;
};

export interface AuthResponse {
  accessToken: string;
  refreshToken: string;
  user: AuthResponseUser;
}

export interface CartItemIdParam {
  /** Product ID */
  productId: string;
}

export type CartItemResponseUpdatedAt = string | null;

export type CartItemResponseProduct = {
  id: string;
  name: string;
  price: number;
  imageUrl: string;
};

export interface CartItemResponse {
  id: string;
  productId: string;
  quantity: number;
  createdAt: string;
  updatedAt: CartItemResponseUpdatedAt;
  product: CartItemResponseProduct;
}

export type CartSummaryResponseItemsItemUpdatedAt = string | null;

export type CartSummaryResponseItemsItemProduct = {
  id: string;
  name: string;
  price: number;
  imageUrl: string;
};

export type CartSummaryResponseItemsItem = {
  id: string;
  productId: string;
  quantity: number;
  createdAt: string;
  updatedAt: CartSummaryResponseItemsItemUpdatedAt;
  product: CartSummaryResponseItemsItemProduct;
};

export interface CartSummaryResponse {
  items: CartSummaryResponseItemsItem[];
  totalItems: number;
  subtotal: number;
  estimatedTax: number;
  estimatedShipping: number;
  total: number;
}

export type CheckoutBodyItemsItem = {
  productId: string;
  /** @minimum 1 */
  quantity: number;
};

export interface CheckoutBody {
  /** @minItems 1 */
  items: CheckoutBodyItemsItem[];
}

export interface CheckoutItem {
  productId: string;
  /** @minimum 1 */
  quantity: number;
}

export type CustomerOrderDetailsResponseDataOrderUpdatedAt = string | null;

export type CustomerOrderDetailsResponseDataOrderEstimatedDelivery = string | null;

export type CustomerOrderDetailsResponseDataOrderDeliveredAt = string | null;

export type CustomerOrderDetailsResponseDataOrderShippingAddressAnyOf = {
  street: string;
  city: string;
  state: string;
  postalCode: string;
  country: string;
};

export type CustomerOrderDetailsResponseDataOrderShippingAddress = CustomerOrderDetailsResponseDataOrderShippingAddressAnyOf | null;

export type CustomerOrderDetailsResponseDataOrderBillingAddressAnyOf = {
  street: string;
  city: string;
  state: string;
  postalCode: string;
  country: string;
};

export type CustomerOrderDetailsResponseDataOrderBillingAddress = CustomerOrderDetailsResponseDataOrderBillingAddressAnyOf | null;

export type CustomerOrderDetailsResponseDataOrderStore = {
  id: string;
  name: string;
  slug: string;
};

export type CustomerOrderDetailsResponseDataOrderItemsItemProduct = {
  id: string;
  name: string;
  imageUrl: string;
};

export type CustomerOrderDetailsResponseDataOrderItemsItem = {
  id: string;
  productId: string;
  quantity: number;
  price: number;
  product: CustomerOrderDetailsResponseDataOrderItemsItemProduct;
};

export type CustomerOrderDetailsResponseDataOrder = {
  id: string;
  status: string;
  paymentStatus: string;
  total: number;
  subtotal: number;
  tax: number;
  shipping: number;
  discount: number;
  currency: string;
  createdAt: string;
  updatedAt: CustomerOrderDetailsResponseDataOrderUpdatedAt;
  estimatedDelivery: CustomerOrderDetailsResponseDataOrderEstimatedDelivery;
  deliveredAt: CustomerOrderDetailsResponseDataOrderDeliveredAt;
  shippingAddress: CustomerOrderDetailsResponseDataOrderShippingAddress;
  billingAddress: CustomerOrderDetailsResponseDataOrderBillingAddress;
  store: CustomerOrderDetailsResponseDataOrderStore;
  items: CustomerOrderDetailsResponseDataOrderItemsItem[];
};

export type CustomerOrderDetailsResponseData = {
  order: CustomerOrderDetailsResponseDataOrder;
};

export interface CustomerOrderDetailsResponse {
  message: string;
  data: CustomerOrderDetailsResponseData;
}

export interface CustomerOrderIdParam {
  /** Order ID */
  orderId: string;
}

export type CustomerOrderListResponseDataOrdersItemUpdatedAt = string | null;

export type CustomerOrderListResponseDataOrdersItemStore = {
  id: string;
  name: string;
};

export type CustomerOrderListResponseDataOrdersItemItemsItemProduct = {
  id: string;
  name: string;
  imageUrl: string;
};

export type CustomerOrderListResponseDataOrdersItemItemsItem = {
  id: string;
  productId: string;
  quantity: number;
  price: number;
  product: CustomerOrderListResponseDataOrdersItemItemsItemProduct;
};

export type CustomerOrderListResponseDataOrdersItem = {
  id: string;
  status: string;
  paymentStatus: string;
  total: number;
  createdAt: string;
  updatedAt: CustomerOrderListResponseDataOrdersItemUpdatedAt;
  store: CustomerOrderListResponseDataOrdersItemStore;
  items: CustomerOrderListResponseDataOrdersItemItemsItem[];
};

export type CustomerOrderListResponseDataPagination = {
  page: number;
  limit: number;
  total: number;
  totalPages: number;
};

export type CustomerOrderListResponseData = {
  orders: CustomerOrderListResponseDataOrdersItem[];
  pagination: CustomerOrderListResponseDataPagination;
};

export interface CustomerOrderListResponse {
  message: string;
  data: CustomerOrderListResponseData;
}

/**
 * Filter orders by status
 */
export type CustomerOrderQueryStatus = typeof CustomerOrderQueryStatus[keyof typeof CustomerOrderQueryStatus];


export const CustomerOrderQueryStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
} as const;

export interface CustomerOrderQuery {
  /** Search query */
  q?: string;
  /**
   * 1-based page number
   * @pattern ^\d+$
   */
  page?: string;
  /**
   * Number of items per page
   * @pattern ^\d+$
   */
  limit?: string;
  /** Filter orders by status */
  status?: CustomerOrderQueryStatus;
}

export type CustomerOrderResponseUpdatedAt = string | null;

export type CustomerOrderResponseStore = {
  id: string;
  name: string;
};

export type CustomerOrderResponseItemsItemProduct = {
  id: string;
  name: string;
  imageUrl: string;
};

export type CustomerOrderResponseItemsItem = {
  id: string;
  productId: string;
  quantity: number;
  price: number;
  product: CustomerOrderResponseItemsItemProduct;
};

export interface CustomerOrderResponse {
  id: string;
  status: string;
  paymentStatus: string;
  total: number;
  createdAt: string;
  updatedAt: CustomerOrderResponseUpdatedAt;
  store: CustomerOrderResponseStore;
  items: CustomerOrderResponseItemsItem[];
}

export type CustomerStatsResponseData = {
  totalOrders: number;
  totalSpent: number;
  averageOrderValue: number;
  ordersThisMonth: number;
};

export interface CustomerStatsResponse {
  message: string;
  data: CustomerStatsResponseData;
}

export interface ErrorResponse {
  message: string;
  error?: string;
}

export type FulfillmentTrackingQueryStatus = typeof FulfillmentTrackingQueryStatus[keyof typeof FulfillmentTrackingQueryStatus];


export const FulfillmentTrackingQueryStatus = {
  PICKED_UP: 'PICKED_UP',
  IN_TRANSIT: 'IN_TRANSIT',
  OUT_FOR_DELIVERY: 'OUT_FOR_DELIVERY',
  DELIVERED: 'DELIVERED',
} as const;

export interface FulfillmentTrackingQuery {
  orderId: string;
  trackingNumber?: string;
  carrier?: string;
  estimatedDelivery?: string;
  currentLocation?: string;
  status?: FulfillmentTrackingQueryStatus;
}

export type FulfillmentTrackingResponseTrackingHistoryItem = {
  status: string;
  location?: string;
  timestamp: string;
  description: string;
};

export interface FulfillmentTrackingResponse {
  orderId: string;
  trackingNumber?: string;
  carrier?: string;
  status: string;
  estimatedDelivery?: string;
  currentLocation?: string;
  trackingHistory: FulfillmentTrackingResponseTrackingHistoryItem[];
  lastUpdated: string;
}

export interface IDParam {
  /** Resource ID */
  id: string;
}

export interface LoginBody {
  email: string;
  /** @minLength 8 */
  password: string;
}

export type MarkAllNotificationsReadResponseData = {
  updatedCount: number;
};

export interface MarkAllNotificationsReadResponse {
  message: string;
  data: MarkAllNotificationsReadResponseData;
}

export interface MarkNotificationReadRequest {
  notificationId: string;
}

export type MarkNotificationReadResponseDataNotificationMetadataAnyOf = {[key: string]: string};

export type MarkNotificationReadResponseDataNotificationMetadata = MarkNotificationReadResponseDataNotificationMetadataAnyOf | null;

export type MarkNotificationReadResponseDataNotificationUpdatedAt = string | null;

export type MarkNotificationReadResponseDataNotification = {
  id: string;
  userId: string;
  type: string;
  title: string;
  message: string;
  isRead: boolean;
  metadata: MarkNotificationReadResponseDataNotificationMetadata;
  createdAt: string;
  updatedAt: MarkNotificationReadResponseDataNotificationUpdatedAt;
};

export type MarkNotificationReadResponseData = {
  notification: MarkNotificationReadResponseDataNotification;
};

export interface MarkNotificationReadResponse {
  message: string;
  data: MarkNotificationReadResponseData;
}

export type MeResponseUserRole = typeof MeResponseUserRole[keyof typeof MeResponseUserRole];


export const MeResponseUserRole = {
  CUSTOMER: 'CUSTOMER',
  VENDOR: 'VENDOR',
  ADMIN: 'ADMIN',
  SUPER: 'SUPER',
} as const;

export type MeResponseUserStoreId = string | null;

export type MeResponseUserFirstName = string | null;

export type MeResponseUserLastName = string | null;

export type MeResponseUserPhone = string | null;

export type MeResponseUserUpdatedAt = string | null;

export type MeResponseUser = {
  id: string;
  email: string;
  role: MeResponseUserRole;
  storeId: MeResponseUserStoreId;
  firstName: MeResponseUserFirstName;
  lastName: MeResponseUserLastName;
  phone: MeResponseUserPhone;
  createdAt: string;
  updatedAt: MeResponseUserUpdatedAt;
};

export interface MeResponse {
  user: MeResponseUser;
}

export interface NotificationErrorResponse {
  message: string;
  error?: string;
}

export interface NotificationIdParam {
  /** Notification ID */
  notificationId: string;
}

export type NotificationListResponseDataNotificationsItemMetadataAnyOf = {[key: string]: string};

export type NotificationListResponseDataNotificationsItemMetadata = NotificationListResponseDataNotificationsItemMetadataAnyOf | null;

export type NotificationListResponseDataNotificationsItemUpdatedAt = string | null;

export type NotificationListResponseDataNotificationsItem = {
  id: string;
  userId: string;
  type: string;
  title: string;
  message: string;
  isRead: boolean;
  metadata: NotificationListResponseDataNotificationsItemMetadata;
  createdAt: string;
  updatedAt: NotificationListResponseDataNotificationsItemUpdatedAt;
};

export type NotificationListResponseDataPagination = {
  page: number;
  limit: number;
  total: number;
  totalPages: number;
};

export type NotificationListResponseData = {
  notifications: NotificationListResponseDataNotificationsItem[];
  pagination: NotificationListResponseDataPagination;
};

export interface NotificationListResponse {
  message: string;
  data: NotificationListResponseData;
}

export type NotificationResponseMetadataAnyOf = {[key: string]: string};

export type NotificationResponseMetadata = NotificationResponseMetadataAnyOf | null;

export type NotificationResponseUpdatedAt = string | null;

export interface NotificationResponse {
  id: string;
  userId: string;
  type: string;
  title: string;
  message: string;
  isRead: boolean;
  metadata: NotificationResponseMetadata;
  createdAt: string;
  updatedAt: NotificationResponseUpdatedAt;
}

export interface OrderIdParam {
  /** Order ID */
  orderId: string;
}

export interface OrderItemResponse {
  id: string;
  productId: string;
  quantity: number;
  price: number;
}

export type OrderListQueryStatus = typeof OrderListQueryStatus[keyof typeof OrderListQueryStatus];


export const OrderListQueryStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CONFIRMED: 'CONFIRMED',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED',
} as const;

export interface OrderListQuery {
  /** Search query */
  q?: string;
  /**
   * 1-based page number
   * @pattern ^\d+$
   */
  page?: string;
  /**
   * Number of items per page
   * @pattern ^\d+$
   */
  limit?: string;
  storeId?: string;
  status?: OrderListQueryStatus;
  startDate?: string;
  endDate?: string;
}

export type OrderListResponseItemsItemStatus = typeof OrderListResponseItemsItemStatus[keyof typeof OrderListResponseItemsItemStatus];


export const OrderListResponseItemsItemStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CONFIRMED: 'CONFIRMED',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED',
} as const;

export type OrderListResponseItemsItemPaymentStatus = typeof OrderListResponseItemsItemPaymentStatus[keyof typeof OrderListResponseItemsItemPaymentStatus];


export const OrderListResponseItemsItemPaymentStatus = {
  UNPAID: 'UNPAID',
  PAID: 'PAID',
  PENDING: 'PENDING',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED',
  CANCELLED: 'CANCELLED',
} as const;

export type OrderListResponseItemsItemItemsItem = {
  id: string;
  productId: string;
  quantity: number;
  price: number;
};

export type OrderListResponseItemsItemUpdatedAt = string | null;

export type OrderListResponseItemsItem = {
  id: string;
  customerId: string;
  storeId: string;
  status: OrderListResponseItemsItemStatus;
  paymentStatus: OrderListResponseItemsItemPaymentStatus;
  total: number;
  subtotal: number;
  tax: number;
  shipping: number;
  discount: number;
  currency: string;
  items: OrderListResponseItemsItemItemsItem[];
  createdAt: string;
  updatedAt: OrderListResponseItemsItemUpdatedAt;
};

export type OrderListResponseMeta = {
  total: number;
  page: number;
  pageSize: number;
};

export interface OrderListResponse {
  items: OrderListResponseItemsItem[];
  meta: OrderListResponseMeta;
}

export type OrderResponseStatus = typeof OrderResponseStatus[keyof typeof OrderResponseStatus];


export const OrderResponseStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CONFIRMED: 'CONFIRMED',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED',
} as const;

export type OrderResponsePaymentStatus = typeof OrderResponsePaymentStatus[keyof typeof OrderResponsePaymentStatus];


export const OrderResponsePaymentStatus = {
  UNPAID: 'UNPAID',
  PAID: 'PAID',
  PENDING: 'PENDING',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED',
  CANCELLED: 'CANCELLED',
} as const;

export type OrderResponseItemsItem = {
  id: string;
  productId: string;
  quantity: number;
  price: number;
};

export type OrderResponseUpdatedAt = string | null;

export interface OrderResponse {
  id: string;
  customerId: string;
  storeId: string;
  status: OrderResponseStatus;
  paymentStatus: OrderResponsePaymentStatus;
  total: number;
  subtotal: number;
  tax: number;
  shipping: number;
  discount: number;
  currency: string;
  items: OrderResponseItemsItem[];
  createdAt: string;
  updatedAt: OrderResponseUpdatedAt;
}

export interface OrderStatsQuery {
  /**
   * @minimum 1
   * @maximum 365
   */
  days?: number;
}

export type OrderTrackingResponseDataEstimatedDelivery = string | null;

export type OrderTrackingResponseDataDeliveredAt = string | null;

export type OrderTrackingResponseDataTrackingEventsItem = {
  eventType: string;
  description: string;
  timestamp: string;
};

export type OrderTrackingResponseDataDeliveryUpdatesItemLocation = string | null;

export type OrderTrackingResponseDataDeliveryUpdatesItem = {
  status: string;
  location: OrderTrackingResponseDataDeliveryUpdatesItemLocation;
  timestamp: string;
  description: string;
};

export type OrderTrackingResponseData = {
  orderId: string;
  status: string;
  paymentStatus: string;
  estimatedDelivery: OrderTrackingResponseDataEstimatedDelivery;
  deliveredAt: OrderTrackingResponseDataDeliveredAt;
  currentLocation: string;
  trackingEvents: OrderTrackingResponseDataTrackingEventsItem[];
  deliveryUpdates: OrderTrackingResponseDataDeliveryUpdatesItem[];
};

export interface OrderTrackingResponse {
  message: string;
  data: OrderTrackingResponseData;
}

export interface PageMeta {
  total: number;
  page: number;
  pageSize: number;
}

export interface PaginationQuery {
  /** Search query */
  q?: string;
  /**
   * 1-based page number
   * @pattern ^\d+$
   */
  page?: string;
  /**
   * Number of items per page
   * @pattern ^\d+$
   */
  limit?: string;
}

export interface ProductBase {
  /** @minLength 1 */
  name: string;
  /** @minimum 0 */
  price: number;
  /** @minimum 0 */
  stock: number;
  visibleMarket?: boolean;
}

export type ProductCreateImagesItem = {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
};

export interface ProductCreate {
  /** @minLength 1 */
  name: string;
  /** @minimum 0 */
  price: number;
  /** @minimum 0 */
  stock: number;
  visibleMarket?: boolean;
  images?: ProductCreateImagesItem[];
}

export interface ProductIdParam {
  /** Product ID */
  id: string;
}

export interface ProductImageBase {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
}

export interface ProductImageCreate {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
}

export interface ProductImageIdParam {
  productId: string;
  imageId: string;
}

export interface ProductImageReorderRequest {
  /** @minItems 1 */
  imageIds: string[];
}

export interface ProductImageResponse {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
  id: string;
  productId: string;
  createdAt: string;
}

export interface ProductImageUpdate {
  /** @minLength 1 */
  fileName?: string;
  fileUrl?: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
}

export interface ProductListQuery {
  /** Search query */
  q?: string;
  /**
   * 1-based page number
   * @pattern ^\d+$
   */
  page?: string;
  /**
   * Number of items per page
   * @pattern ^\d+$
   */
  limit?: string;
}

export type ProductListResponseItemsItemImagesItem = {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
  id: string;
  productId: string;
  createdAt: string;
};

export type ProductListResponseItemsItemStore = {
  id: string;
  name: string;
  slug: string;
};

export type ProductListResponseItemsItem = {
  /** @minLength 1 */
  name: string;
  /** @minimum 0 */
  price: number;
  /** @minimum 0 */
  stock: number;
  visibleMarket?: boolean;
  id: string;
  storeId: string;
  imageUrl: string;
  images?: ProductListResponseItemsItemImagesItem[];
  store?: ProductListResponseItemsItemStore;
};

export type ProductListResponseMeta = {
  total: number;
  page: number;
  pageSize: number;
};

export interface ProductListResponse {
  items: ProductListResponseItemsItem[];
  meta: ProductListResponseMeta;
}

export type ProductResponseImagesItem = {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
  id: string;
  productId: string;
  createdAt: string;
};

export type ProductResponseStore = {
  id: string;
  name: string;
  slug: string;
};

export interface ProductResponse {
  /** @minLength 1 */
  name: string;
  /** @minimum 0 */
  price: number;
  /** @minimum 0 */
  stock: number;
  visibleMarket?: boolean;
  id: string;
  storeId: string;
  imageUrl: string;
  images?: ProductResponseImagesItem[];
  store?: ProductResponseStore;
}

export interface ProductSearchQuery {
  q?: string;
  category?: string;
  storeId?: string;
  /** @pattern ^\d+$ */
  page?: string;
  /** @pattern ^\d+$ */
  limit?: string;
}

export type ProductUpdateImagesItem = {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
};

export interface ProductUpdate {
  /** @minLength 1 */
  name?: string;
  /** @minimum 0 */
  price?: number;
  /** @minimum 0 */
  stock?: number;
  visibleMarket?: boolean;
  images?: ProductUpdateImagesItem[];
}

export interface RefreshBody {
  refreshToken: string;
}

export type RegisterBodyRole = typeof RegisterBodyRole[keyof typeof RegisterBodyRole];


export const RegisterBodyRole = {
  CUSTOMER: 'CUSTOMER',
  VENDOR: 'VENDOR',
  ADMIN: 'ADMIN',
  SUPER: 'SUPER',
} as const;

export interface RegisterBody {
  email: string;
  /** @minLength 8 */
  password: string;
  role?: RegisterBodyRole;
  firstName?: string;
  lastName?: string;
  phone?: string;
}

export interface SlugParam {
  /** Resource slug */
  slug: string;
}

export interface StoreCreate {
  /** @minLength 1 */
  name: string;
  /** @pattern ^[a-z0-9-]+$ */
  slug: string;
  logoUrl?: string;
}

export interface StoreListQuery {
  /** Search query */
  q?: string;
  /**
   * 1-based page number
   * @pattern ^\d+$
   */
  page?: string;
  /**
   * Number of items per page
   * @pattern ^\d+$
   */
  limit?: string;
}

export type StoreListResponseItemsItemLogoUrl = string | null;

export type StoreListResponseItemsItemOwner = {
  id: string;
  email: string;
};

export type StoreListResponseItemsItem = {
  id: string;
  ownerId: string;
  name: string;
  slug: string;
  logoUrl: StoreListResponseItemsItemLogoUrl;
  owner?: StoreListResponseItemsItemOwner;
};

export type StoreListResponseMeta = {
  total: number;
  page: number;
  pageSize: number;
};

export interface StoreListResponse {
  items: StoreListResponseItemsItem[];
  meta: StoreListResponseMeta;
}

export type StoreResponseLogoUrl = string | null;

export type StoreResponseOwner = {
  id: string;
  email: string;
};

export interface StoreResponse {
  id: string;
  ownerId: string;
  name: string;
  slug: string;
  logoUrl: StoreResponseLogoUrl;
  owner?: StoreResponseOwner;
}

export interface StoreSearchQuery {
  q?: string;
  /** @pattern ^\d+$ */
  page?: string;
  /** @pattern ^\d+$ */
  limit?: string;
}

export interface StoreSlugParam {
  /** Resource slug */
  slug: string;
}

export interface StoreUpdate {
  /** @minLength 1 */
  name?: string;
  /** @pattern ^[a-z0-9-]+$ */
  slug?: string;
  logoUrl?: string;
}

export type UnreadCountResponseData = {
  unreadCount: number;
};

export interface UnreadCountResponse {
  message: string;
  data: UnreadCountResponseData;
}

export interface UpdateCartItemBody {
  /**
   * @maximum 100
   */
  quantity: number;
}

export type UpdateOrderStatusBodyStatus = typeof UpdateOrderStatusBodyStatus[keyof typeof UpdateOrderStatusBodyStatus];


export const UpdateOrderStatusBodyStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CONFIRMED: 'CONFIRMED',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED',
} as const;

export interface UpdateOrderStatusBody {
  status: UpdateOrderStatusBodyStatus;
  reason?: string;
}

export interface UpdateUserBody {
  firstName?: string;
  lastName?: string;
  phone?: string;
}

export interface UserIdParam {
  /** Resource ID */
  id: string;
}

export type UserResponseRole = typeof UserResponseRole[keyof typeof UserResponseRole];


export const UserResponseRole = {
  CUSTOMER: 'CUSTOMER',
  VENDOR: 'VENDOR',
  ADMIN: 'ADMIN',
  SUPER: 'SUPER',
} as const;

export type UserResponseStoreId = string | null;

export type UserResponseFirstName = string | null;

export type UserResponseLastName = string | null;

export type UserResponsePhone = string | null;

export type UserResponseUpdatedAt = string | null;

export interface UserResponse {
  id: string;
  email: string;
  role: UserResponseRole;
  storeId: UserResponseStoreId;
  firstName: UserResponseFirstName;
  lastName: UserResponseLastName;
  phone: UserResponsePhone;
  createdAt: string;
  updatedAt: UserResponseUpdatedAt;
}

export type VendorAnalyticsQueryPeriod = typeof VendorAnalyticsQueryPeriod[keyof typeof VendorAnalyticsQueryPeriod];


export const VendorAnalyticsQueryPeriod = {
  '7d': '7d',
  '30d': '30d',
  '90d': '90d',
  '1y': '1y',
  all: 'all',
} as const;

export interface VendorAnalyticsQuery {
  period?: VendorAnalyticsQueryPeriod;
  startDate?: string;
  endDate?: string;
}

export type VendorAnalyticsResponseRevenueByDayItem = {
  date: string;
  amount: number;
};

export type VendorAnalyticsResponseRevenue = {
  total: number;
  average: number;
  growth: number;
  byDay: VendorAnalyticsResponseRevenueByDayItem[];
};

export type VendorAnalyticsResponseOrdersByStatusItem = {
  status: string;
  count: number;
  percentage: number;
};

export type VendorAnalyticsResponseOrders = {
  total: number;
  average: number;
  growth: number;
  byStatus: VendorAnalyticsResponseOrdersByStatusItem[];
};

export type VendorAnalyticsResponseProductsBestSellersItem = {
  productId: string;
  name: string;
  sales: number;
  revenue: number;
};

export type VendorAnalyticsResponseProducts = {
  total: number;
  active: number;
  lowStock: number;
  outOfStock: number;
  bestSellers: VendorAnalyticsResponseProductsBestSellersItem[];
};

export type VendorAnalyticsResponseCustomers = {
  total: number;
  new: number;
  returning: number;
  averageOrderValue: number;
};

export type VendorAnalyticsResponsePerformanceTopProductsItem = {
  productId: string;
  name: string;
  salesCount: number;
  revenue: number;
};

export type VendorAnalyticsResponsePerformancePerformanceTrendsItem = {
  date: string;
  orders: number;
  revenue: number;
  fulfillmentRate: number;
};

export type VendorAnalyticsResponsePerformance = {
  fulfillmentRate: number;
  averageFulfillmentTime: number;
  customerSatisfaction: number;
  orderAccuracy: number;
  responseTime: number;
  totalOrders: number;
  completedOrders: number;
  cancelledOrders: number;
  refundRate: number;
  averageOrderValue: number;
  topProducts: VendorAnalyticsResponsePerformanceTopProductsItem[];
  performanceTrends: VendorAnalyticsResponsePerformancePerformanceTrendsItem[];
};

export interface VendorAnalyticsResponse {
  period: string;
  revenue: VendorAnalyticsResponseRevenue;
  orders: VendorAnalyticsResponseOrders;
  products: VendorAnalyticsResponseProducts;
  customers: VendorAnalyticsResponseCustomers;
  performance: VendorAnalyticsResponsePerformance;
}

export type VendorPerformanceMetricsTopProductsItem = {
  productId: string;
  name: string;
  salesCount: number;
  revenue: number;
};

export type VendorPerformanceMetricsPerformanceTrendsItem = {
  date: string;
  orders: number;
  revenue: number;
  fulfillmentRate: number;
};

export interface VendorPerformanceMetrics {
  fulfillmentRate: number;
  averageFulfillmentTime: number;
  customerSatisfaction: number;
  orderAccuracy: number;
  responseTime: number;
  totalOrders: number;
  completedOrders: number;
  cancelledOrders: number;
  refundRate: number;
  averageOrderValue: number;
  topProducts: VendorPerformanceMetricsTopProductsItem[];
  performanceTrends: VendorPerformanceMetricsPerformanceTrendsItem[];
}

export interface VendorPerformanceQuery {
  /**
   * @minimum 1
   * @maximum 365
   */
  days?: number;
  includeDetails?: boolean;
}

export type VendorRatingSchemaCategoriesItem = typeof VendorRatingSchemaCategoriesItem[keyof typeof VendorRatingSchemaCategoriesItem];


export const VendorRatingSchemaCategoriesItem = {
  QUALITY: 'QUALITY',
  DELIVERY: 'DELIVERY',
  COMMUNICATION: 'COMMUNICATION',
  PRICE: 'PRICE',
} as const;

export interface VendorRatingSchema {
  orderId: string;
  /**
   * @minimum 1
   * @maximum 5
   */
  rating: number;
  /**
   * @minLength 10
   * @maxLength 500
   */
  review?: string;
  categories?: VendorRatingSchemaCategoriesItem[];
}

export type PostAuthRegisterBodyRole = typeof PostAuthRegisterBodyRole[keyof typeof PostAuthRegisterBodyRole];


export const PostAuthRegisterBodyRole = {
  CUSTOMER: 'CUSTOMER',
  VENDOR: 'VENDOR',
  ADMIN: 'ADMIN',
  SUPER: 'SUPER',
} as const;

export type PostAuthRegisterBody = {
  email: string;
  /** @minLength 8 */
  password: string;
  role?: PostAuthRegisterBodyRole;
  firstName?: string;
  lastName?: string;
  phone?: string;
};

export type PostAuthRegister201UserRole = typeof PostAuthRegister201UserRole[keyof typeof PostAuthRegister201UserRole];


export const PostAuthRegister201UserRole = {
  CUSTOMER: 'CUSTOMER',
  VENDOR: 'VENDOR',
  ADMIN: 'ADMIN',
  SUPER: 'SUPER',
} as const;

export type PostAuthRegister201UserStoreId = string | null;

export type PostAuthRegister201UserFirstName = string | null;

export type PostAuthRegister201UserLastName = string | null;

export type PostAuthRegister201UserPhone = string | null;

export type PostAuthRegister201UserUpdatedAt = string | null;

export type PostAuthRegister201User = {
  id: string;
  email: string;
  role: PostAuthRegister201UserRole;
  storeId: PostAuthRegister201UserStoreId;
  firstName: PostAuthRegister201UserFirstName;
  lastName: PostAuthRegister201UserLastName;
  phone: PostAuthRegister201UserPhone;
  createdAt: string;
  updatedAt: PostAuthRegister201UserUpdatedAt;
};

export type PostAuthRegister201 = {
  accessToken: string;
  refreshToken: string;
  user: PostAuthRegister201User;
};

export type PostAuthRegister409UserRole = typeof PostAuthRegister409UserRole[keyof typeof PostAuthRegister409UserRole];


export const PostAuthRegister409UserRole = {
  CUSTOMER: 'CUSTOMER',
  VENDOR: 'VENDOR',
  ADMIN: 'ADMIN',
  SUPER: 'SUPER',
} as const;

export type PostAuthRegister409UserStoreId = string | null;

export type PostAuthRegister409UserFirstName = string | null;

export type PostAuthRegister409UserLastName = string | null;

export type PostAuthRegister409UserPhone = string | null;

export type PostAuthRegister409UserUpdatedAt = string | null;

export type PostAuthRegister409User = {
  id: string;
  email: string;
  role: PostAuthRegister409UserRole;
  storeId: PostAuthRegister409UserStoreId;
  firstName: PostAuthRegister409UserFirstName;
  lastName: PostAuthRegister409UserLastName;
  phone: PostAuthRegister409UserPhone;
  createdAt: string;
  updatedAt: PostAuthRegister409UserUpdatedAt;
};

export type PostAuthRegister409 = {
  accessToken: string;
  refreshToken: string;
  user: PostAuthRegister409User;
};

export type PostAuthLoginBody = {
  email: string;
  /** @minLength 8 */
  password: string;
};

export type PostAuthLogin201UserRole = typeof PostAuthLogin201UserRole[keyof typeof PostAuthLogin201UserRole];


export const PostAuthLogin201UserRole = {
  CUSTOMER: 'CUSTOMER',
  VENDOR: 'VENDOR',
  ADMIN: 'ADMIN',
  SUPER: 'SUPER',
} as const;

export type PostAuthLogin201UserStoreId = string | null;

export type PostAuthLogin201UserFirstName = string | null;

export type PostAuthLogin201UserLastName = string | null;

export type PostAuthLogin201UserPhone = string | null;

export type PostAuthLogin201UserUpdatedAt = string | null;

export type PostAuthLogin201User = {
  id: string;
  email: string;
  role: PostAuthLogin201UserRole;
  storeId: PostAuthLogin201UserStoreId;
  firstName: PostAuthLogin201UserFirstName;
  lastName: PostAuthLogin201UserLastName;
  phone: PostAuthLogin201UserPhone;
  createdAt: string;
  updatedAt: PostAuthLogin201UserUpdatedAt;
};

export type PostAuthLogin201 = {
  accessToken: string;
  refreshToken: string;
  user: PostAuthLogin201User;
};

export type PostAuthRefreshBody = {
  refreshToken: string;
};

export type PostAuthRefresh200UserRole = typeof PostAuthRefresh200UserRole[keyof typeof PostAuthRefresh200UserRole];


export const PostAuthRefresh200UserRole = {
  CUSTOMER: 'CUSTOMER',
  VENDOR: 'VENDOR',
  ADMIN: 'ADMIN',
  SUPER: 'SUPER',
} as const;

export type PostAuthRefresh200UserStoreId = string | null;

export type PostAuthRefresh200UserFirstName = string | null;

export type PostAuthRefresh200UserLastName = string | null;

export type PostAuthRefresh200UserPhone = string | null;

export type PostAuthRefresh200UserUpdatedAt = string | null;

export type PostAuthRefresh200User = {
  id: string;
  email: string;
  role: PostAuthRefresh200UserRole;
  storeId: PostAuthRefresh200UserStoreId;
  firstName: PostAuthRefresh200UserFirstName;
  lastName: PostAuthRefresh200UserLastName;
  phone: PostAuthRefresh200UserPhone;
  createdAt: string;
  updatedAt: PostAuthRefresh200UserUpdatedAt;
};

export type PostAuthRefresh200 = {
  accessToken: string;
  refreshToken: string;
  user: PostAuthRefresh200User;
};

export type GetAuthUsers200ItemStoreId = string | null;

export type GetAuthUsers200ItemFirstName = string | null;

export type GetAuthUsers200ItemLastName = string | null;

export type GetAuthUsers200ItemPhone = string | null;

export type GetAuthUsers200ItemUpdatedAt = string | null;

export type GetAuthUsers200Item = {
  id?: string;
  email?: string;
  role?: string;
  storeId?: GetAuthUsers200ItemStoreId;
  firstName?: GetAuthUsers200ItemFirstName;
  lastName?: GetAuthUsers200ItemLastName;
  phone?: GetAuthUsers200ItemPhone;
  createdAt?: string;
  updatedAt?: GetAuthUsers200ItemUpdatedAt;
};

export type GetAuthMe200UserRole = typeof GetAuthMe200UserRole[keyof typeof GetAuthMe200UserRole];


export const GetAuthMe200UserRole = {
  CUSTOMER: 'CUSTOMER',
  VENDOR: 'VENDOR',
  ADMIN: 'ADMIN',
  SUPER: 'SUPER',
} as const;

export type GetAuthMe200UserStoreId = string | null;

export type GetAuthMe200UserFirstName = string | null;

export type GetAuthMe200UserLastName = string | null;

export type GetAuthMe200UserPhone = string | null;

export type GetAuthMe200UserUpdatedAt = string | null;

export type GetAuthMe200User = {
  id: string;
  email: string;
  role: GetAuthMe200UserRole;
  storeId: GetAuthMe200UserStoreId;
  firstName: GetAuthMe200UserFirstName;
  lastName: GetAuthMe200UserLastName;
  phone: GetAuthMe200UserPhone;
  createdAt: string;
  updatedAt: GetAuthMe200UserUpdatedAt;
};

export type GetAuthMe200 = {
  user: GetAuthMe200User;
};

export type GetAuthMe401 = {
  message?: string;
};

export type GetAuthMe404 = {
  message?: string;
};

export type PatchAuthMeBody = {
  firstName?: string;
  lastName?: string;
  phone?: string;
};

export type PatchAuthMe200UserRole = typeof PatchAuthMe200UserRole[keyof typeof PatchAuthMe200UserRole];


export const PatchAuthMe200UserRole = {
  CUSTOMER: 'CUSTOMER',
  VENDOR: 'VENDOR',
  ADMIN: 'ADMIN',
  SUPER: 'SUPER',
} as const;

export type PatchAuthMe200UserStoreId = string | null;

export type PatchAuthMe200UserFirstName = string | null;

export type PatchAuthMe200UserLastName = string | null;

export type PatchAuthMe200UserPhone = string | null;

export type PatchAuthMe200UserUpdatedAt = string | null;

export type PatchAuthMe200User = {
  id: string;
  email: string;
  role: PatchAuthMe200UserRole;
  storeId: PatchAuthMe200UserStoreId;
  firstName: PatchAuthMe200UserFirstName;
  lastName: PatchAuthMe200UserLastName;
  phone: PatchAuthMe200UserPhone;
  createdAt: string;
  updatedAt: PatchAuthMe200UserUpdatedAt;
};

export type PatchAuthMe200 = {
  user: PatchAuthMe200User;
};

export type PatchAuthMe400 = {
  message?: string;
};

export type PatchAuthMe401 = {
  message?: string;
};

export type PatchAuthMe404 = {
  message?: string;
};

export type GetProductsParams = {
q?: string;
category?: string;
storeId?: string;
/**
 * @pattern ^\d+$
 */
page?: string;
/**
 * @pattern ^\d+$
 */
limit?: string;
};

export type GetProducts200ItemsItemImagesItem = {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
  id: string;
  productId: string;
  createdAt: string;
};

export type GetProducts200ItemsItemStore = {
  id: string;
  name: string;
  slug: string;
};

export type GetProducts200ItemsItem = {
  /** @minLength 1 */
  name: string;
  /** @minimum 0 */
  price: number;
  /** @minimum 0 */
  stock: number;
  visibleMarket?: boolean;
  id: string;
  storeId: string;
  imageUrl: string;
  images?: GetProducts200ItemsItemImagesItem[];
  store?: GetProducts200ItemsItemStore;
};

export type GetProducts200Meta = {
  total: number;
  page: number;
  pageSize: number;
};

export type GetProducts200 = {
  items: GetProducts200ItemsItem[];
  meta: GetProducts200Meta;
};

export type PostProductsBodyImagesItem = {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
};

export type PostProductsBody = {
  /** @minLength 1 */
  name: string;
  /** @minimum 0 */
  price: number;
  /** @minimum 0 */
  stock: number;
  visibleMarket?: boolean;
  images?: PostProductsBodyImagesItem[];
};

export type PostProducts201ImagesItem = {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
  id: string;
  productId: string;
  createdAt: string;
};

export type PostProducts201Store = {
  id: string;
  name: string;
  slug: string;
};

export type PostProducts201 = {
  /** @minLength 1 */
  name: string;
  /** @minimum 0 */
  price: number;
  /** @minimum 0 */
  stock: number;
  visibleMarket?: boolean;
  id: string;
  storeId: string;
  imageUrl: string;
  images?: PostProducts201ImagesItem[];
  store?: PostProducts201Store;
};

export type PostProducts401 = {
  message?: string;
};

export type PostProducts403 = {
  message?: string;
};

export type GetProductsId200ImagesItem = {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
  id: string;
  productId: string;
  createdAt: string;
};

export type GetProductsId200Store = {
  id: string;
  name: string;
  slug: string;
};

export type GetProductsId200 = {
  /** @minLength 1 */
  name: string;
  /** @minimum 0 */
  price: number;
  /** @minimum 0 */
  stock: number;
  visibleMarket?: boolean;
  id: string;
  storeId: string;
  imageUrl: string;
  images?: GetProductsId200ImagesItem[];
  store?: GetProductsId200Store;
};

export type GetProductsId404 = {
  message?: string;
};

export type PutProductsIdBodyImagesItem = {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
};

export type PutProductsIdBody = {
  /** @minLength 1 */
  name?: string;
  /** @minimum 0 */
  price?: number;
  /** @minimum 0 */
  stock?: number;
  visibleMarket?: boolean;
  images?: PutProductsIdBodyImagesItem[];
};

export type PutProductsId200ImagesItem = {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
  id: string;
  productId: string;
  createdAt: string;
};

export type PutProductsId200Store = {
  id: string;
  name: string;
  slug: string;
};

export type PutProductsId200 = {
  /** @minLength 1 */
  name: string;
  /** @minimum 0 */
  price: number;
  /** @minimum 0 */
  stock: number;
  visibleMarket?: boolean;
  id: string;
  storeId: string;
  imageUrl: string;
  images?: PutProductsId200ImagesItem[];
  store?: PutProductsId200Store;
};

export type PutProductsId401 = {
  message?: string;
};

export type PutProductsId403 = {
  message?: string;
};

export type PutProductsId404 = {
  message?: string;
};

export type DeleteProductsId401 = {
  message?: string;
};

export type DeleteProductsId403 = {
  message?: string;
};

export type DeleteProductsId404 = {
  message?: string;
};

export type GetStoresParams = {
q?: string;
/**
 * @pattern ^\d+$
 */
page?: string;
/**
 * @pattern ^\d+$
 */
limit?: string;
};

export type GetStores200ItemsItemLogoUrl = string | null;

export type GetStores200ItemsItemOwner = {
  id: string;
  email: string;
};

export type GetStores200ItemsItem = {
  id: string;
  ownerId: string;
  name: string;
  slug: string;
  logoUrl: GetStores200ItemsItemLogoUrl;
  owner?: GetStores200ItemsItemOwner;
};

export type GetStores200Meta = {
  total: number;
  page: number;
  pageSize: number;
};

export type GetStores200 = {
  items: GetStores200ItemsItem[];
  meta: GetStores200Meta;
};

export type PostStoresBody = {
  /** @minLength 1 */
  name: string;
  /** @pattern ^[a-z0-9-]+$ */
  slug: string;
  logoUrl?: string;
};

export type PostStores201LogoUrl = string | null;

export type PostStores201Owner = {
  id: string;
  email: string;
};

export type PostStores201 = {
  id: string;
  ownerId: string;
  name: string;
  slug: string;
  logoUrl: PostStores201LogoUrl;
  owner?: PostStores201Owner;
};

export type PostStores401 = {
  message?: string;
};

export type PostStores409 = {
  message?: string;
};

export type GetStoresSlug200LogoUrl = string | null;

export type GetStoresSlug200Owner = {
  id: string;
  email: string;
};

export type GetStoresSlug200 = {
  id: string;
  ownerId: string;
  name: string;
  slug: string;
  logoUrl: GetStoresSlug200LogoUrl;
  owner?: GetStoresSlug200Owner;
};

export type GetStoresSlug404 = {
  message?: string;
};

export type PutStoresSlugBody = {
  /** @minLength 1 */
  name?: string;
  /** @pattern ^[a-z0-9-]+$ */
  slug?: string;
  logoUrl?: string;
};

export type PutStoresSlug200LogoUrl = string | null;

export type PutStoresSlug200Owner = {
  id: string;
  email: string;
};

export type PutStoresSlug200 = {
  id: string;
  ownerId: string;
  name: string;
  slug: string;
  logoUrl: PutStoresSlug200LogoUrl;
  owner?: PutStoresSlug200Owner;
};

export type PutStoresSlug401 = {
  message?: string;
};

export type PutStoresSlug403 = {
  message?: string;
};

export type PutStoresSlug404 = {
  message?: string;
};

export type PutStoresSlug409 = {
  message?: string;
};

export type DeleteStoresSlug401 = {
  message?: string;
};

export type DeleteStoresSlug403 = {
  message?: string;
};

export type DeleteStoresSlug404 = {
  message?: string;
};

export type GetStoresSlugProductsParams = {
q?: string;
category?: string;
storeId?: string;
/**
 * @pattern ^\d+$
 */
page?: string;
/**
 * @pattern ^\d+$
 */
limit?: string;
};

export type GetStoresSlugProducts200ItemsItemImagesItem = {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
  id: string;
  productId: string;
  createdAt: string;
};

export type GetStoresSlugProducts200ItemsItemStore = {
  id: string;
  name: string;
  slug: string;
};

export type GetStoresSlugProducts200ItemsItem = {
  /** @minLength 1 */
  name: string;
  /** @minimum 0 */
  price: number;
  /** @minimum 0 */
  stock: number;
  visibleMarket?: boolean;
  id: string;
  storeId: string;
  imageUrl: string;
  images?: GetStoresSlugProducts200ItemsItemImagesItem[];
  store?: GetStoresSlugProducts200ItemsItemStore;
};

export type GetStoresSlugProducts200Meta = {
  total: number;
  page: number;
  pageSize: number;
};

export type GetStoresSlugProducts200 = {
  items: GetStoresSlugProducts200ItemsItem[];
  meta: GetStoresSlugProducts200Meta;
};

export type GetStoresSlugProducts404 = {
  message?: string;
};

export type GetVendorDashboard200StoreAnyOf = {
  id?: string;
  name?: string;
  slug?: string;
  logoUrl?: string;
};

export type GetVendorDashboard200Store = GetVendorDashboard200StoreAnyOf | null;

export type GetVendorDashboard200OwnerStoreId = string | null;

export type GetVendorDashboard200OwnerFirstName = string | null;

export type GetVendorDashboard200OwnerLastName = string | null;

export type GetVendorDashboard200OwnerPhone = string | null;

export type GetVendorDashboard200OwnerUpdatedAt = string | null;

export type GetVendorDashboard200Owner = {
  id?: string;
  email?: string;
  role?: string;
  storeId?: GetVendorDashboard200OwnerStoreId;
  firstName?: GetVendorDashboard200OwnerFirstName;
  lastName?: GetVendorDashboard200OwnerLastName;
  phone?: GetVendorDashboard200OwnerPhone;
  createdAt?: string;
  updatedAt?: GetVendorDashboard200OwnerUpdatedAt;
};

export type GetVendorDashboard200Stats = {
  totalProducts?: number;
  lowStockProducts?: number;
  visibleProducts?: number;
  hiddenProducts?: number;
  totalOrders?: number;
  totalRevenue?: number;
  totalItemsSold?: number;
};

export type GetVendorDashboard200RecentOrdersItem = { [key: string]: unknown };

export type GetVendorDashboard200 = {
  store?: GetVendorDashboard200Store;
  owner?: GetVendorDashboard200Owner;
  stats?: GetVendorDashboard200Stats;
  recentOrders?: GetVendorDashboard200RecentOrdersItem[];
  message?: string;
};

export type GetVendorDashboard401 = {
  message?: string;
};

export type GetVendorDashboard404 = {
  message?: string;
};

export type GetVendorProductsStats200StockHealth = {
  healthy?: number;
  lowStock?: number;
  outOfStock?: number;
};

export type GetVendorProductsStats200 = {
  totalProducts?: number;
  visibleProducts?: number;
  hiddenProducts?: number;
  lowStockProducts?: number;
  outOfStockProducts?: number;
  totalValue?: number;
  stockHealth?: GetVendorProductsStats200StockHealth;
};

export type GetVendorStore200Owner = {
  id?: string;
  email?: string;
  role?: string;
};

export type GetVendorStore200 = {
  id?: string;
  name?: string;
  slug?: string;
  logoUrl?: string;
  paystackAccountCode?: string;
  paystackAccountActive?: boolean;
  owner?: GetVendorStore200Owner;
};

export type PutVendorStoreBody = {
  name?: string;
  slug?: string;
  logoUrl?: string;
};

export type PutVendorStore200 = {
  id?: string;
  name?: string;
  slug?: string;
  logoUrl?: string;
};

export type PutVendorStore400 = {
  message?: string;
};

export type PutVendorStore409 = {
  message?: string;
};

export type GetVendorProducts200ItemsItemSalesData = {
  totalSold?: number;
  totalRevenue?: number;
  averagePrice?: number;
};

export type GetVendorProducts200ItemsItem = {
  id?: string;
  name?: string;
  price?: number;
  stock?: number;
  imageUrl?: string;
  visibleMarket?: boolean;
  storeId?: string;
  salesData?: GetVendorProducts200ItemsItemSalesData;
};

export type GetVendorProducts200Meta = {
  total?: number;
  page?: number;
  pageSize?: number;
};

export type GetVendorProducts200 = {
  items?: GetVendorProducts200ItemsItem[];
  meta?: GetVendorProducts200Meta;
};

export type GetVendorProducts401 = {
  message?: string;
};

export type GetVendorProducts404 = {
  message?: string;
};

export type GetVendorProductsBestSellers200ItemsItemSalesData = {
  totalSold?: number;
  totalRevenue?: number;
  averagePrice?: number;
};

export type GetVendorProductsBestSellers200ItemsItem = {
  id?: string;
  name?: string;
  price?: number;
  stock?: number;
  imageUrl?: string;
  visibleMarket?: boolean;
  salesData?: GetVendorProductsBestSellers200ItemsItemSalesData;
};

export type GetVendorProductsBestSellers200Meta = {
  total?: number;
};

export type GetVendorProductsBestSellers200 = {
  period?: string;
  items?: GetVendorProductsBestSellers200ItemsItem[];
  meta?: GetVendorProductsBestSellers200Meta;
};

export type GetVendorProductsBestSellers401 = {
  message?: string;
};

export type GetVendorProductsBestSellers404 = {
  message?: string;
};

export type GetVendorAnalyticsParams = {
period?: GetVendorAnalyticsPeriod;
startDate?: string;
endDate?: string;
};

export type GetVendorAnalyticsPeriod = typeof GetVendorAnalyticsPeriod[keyof typeof GetVendorAnalyticsPeriod];


export const GetVendorAnalyticsPeriod = {
  '7d': '7d',
  '30d': '30d',
  '90d': '90d',
  '1y': '1y',
  all: 'all',
} as const;

export type GetVendorAnalytics200RevenueByDayItem = {
  date?: string;
  amount?: number;
};

export type GetVendorAnalytics200Revenue = {
  total?: number;
  average?: number;
  growth?: number;
  byDay?: GetVendorAnalytics200RevenueByDayItem[];
};

export type GetVendorAnalytics200OrdersByStatusItem = {
  status?: string;
  count?: number;
  percentage?: number;
};

export type GetVendorAnalytics200Orders = {
  total?: number;
  average?: number;
  growth?: number;
  byStatus?: GetVendorAnalytics200OrdersByStatusItem[];
};

export type GetVendorAnalytics200ProductsBestSellersItem = {
  productId?: string;
  name?: string;
  sales?: number;
  revenue?: number;
};

export type GetVendorAnalytics200Products = {
  total?: number;
  active?: number;
  lowStock?: number;
  outOfStock?: number;
  bestSellers?: GetVendorAnalytics200ProductsBestSellersItem[];
};

export type GetVendorAnalytics200Customers = {
  total?: number;
  new?: number;
  returning?: number;
  averageOrderValue?: number;
};

export type GetVendorAnalytics200Performance = {
  fulfillmentRate?: number;
  averageFulfillmentTime?: number;
  customerSatisfaction?: number;
  orderAccuracy?: number;
  responseTime?: number;
  totalOrders?: number;
  completedOrders?: number;
  cancelledOrders?: number;
  refundRate?: number;
  averageOrderValue?: number;
};

export type GetVendorAnalytics200 = {
  period?: string;
  revenue?: GetVendorAnalytics200Revenue;
  orders?: GetVendorAnalytics200Orders;
  products?: GetVendorAnalytics200Products;
  customers?: GetVendorAnalytics200Customers;
  performance?: GetVendorAnalytics200Performance;
};

export type GetVendorAnalytics401 = {
  message?: string;
};

export type GetVendorPerformanceParams = {
/**
 * @minimum 1
 * @maximum 365
 */
days?: number;
includeDetails?: boolean;
};

export type GetVendorPerformance200TopProductsItem = {
  productId?: string;
  name?: string;
  salesCount?: number;
  revenue?: number;
};

export type GetVendorPerformance200PerformanceTrendsItem = {
  date?: string;
  orders?: number;
  revenue?: number;
  fulfillmentRate?: number;
};

export type GetVendorPerformance200 = {
  fulfillmentRate?: number;
  averageFulfillmentTime?: number;
  customerSatisfaction?: number;
  orderAccuracy?: number;
  responseTime?: number;
  totalOrders?: number;
  completedOrders?: number;
  cancelledOrders?: number;
  refundRate?: number;
  averageOrderValue?: number;
  topProducts?: GetVendorPerformance200TopProductsItem[];
  performanceTrends?: GetVendorPerformance200PerformanceTrendsItem[];
};

export type GetVendorPerformance401 = {
  message?: string;
};

export type PutVendorOrdersOrderIdTrackingBodyStatus = typeof PutVendorOrdersOrderIdTrackingBodyStatus[keyof typeof PutVendorOrdersOrderIdTrackingBodyStatus];


export const PutVendorOrdersOrderIdTrackingBodyStatus = {
  PICKED_UP: 'PICKED_UP',
  IN_TRANSIT: 'IN_TRANSIT',
  OUT_FOR_DELIVERY: 'OUT_FOR_DELIVERY',
  DELIVERED: 'DELIVERED',
} as const;

export type PutVendorOrdersOrderIdTrackingBody = {
  trackingNumber?: string;
  carrier?: string;
  estimatedDelivery?: string;
  currentLocation?: string;
  status?: PutVendorOrdersOrderIdTrackingBodyStatus;
};

export type PutVendorOrdersOrderIdTracking200TrackingTrackingHistoryItem = {
  status?: string;
  location?: string;
  timestamp?: string;
  description?: string;
};

export type PutVendorOrdersOrderIdTracking200Tracking = {
  orderId?: string;
  trackingNumber?: string;
  carrier?: string;
  status?: string;
  estimatedDelivery?: string;
  currentLocation?: string;
  trackingHistory?: PutVendorOrdersOrderIdTracking200TrackingTrackingHistoryItem[];
  lastUpdated?: string;
};

export type PutVendorOrdersOrderIdTracking200 = {
  message?: string;
  tracking?: PutVendorOrdersOrderIdTracking200Tracking;
};

export type PutVendorOrdersOrderIdTracking401 = {
  message?: string;
};

export type PutVendorOrdersOrderIdTracking403 = {
  message?: string;
};

export type GetVendorOrdersOrderIdTracking200TrackingHistoryItem = {
  status?: string;
  location?: string;
  timestamp?: string;
  description?: string;
};

export type GetVendorOrdersOrderIdTracking200 = {
  orderId?: string;
  trackingNumber?: string;
  carrier?: string;
  status?: string;
  estimatedDelivery?: string;
  currentLocation?: string;
  trackingHistory?: GetVendorOrdersOrderIdTracking200TrackingHistoryItem[];
  lastUpdated?: string;
};

export type GetVendorOrdersOrderIdTracking401 = {
  message?: string;
};

export type GetVendorOrdersOrderIdTracking403 = {
  message?: string;
};

export type PostVendorOrdersOrderIdPickedUpBody = {
  trackingNumber?: string;
  carrier?: string;
};

export type PostVendorOrdersOrderIdPickedUp200 = {
  message?: string;
};

export type PostVendorOrdersOrderIdPickedUp401 = {
  message?: string;
};

export type PostVendorOrdersOrderIdPickedUp403 = {
  message?: string;
};

export type PostVendorOrdersOrderIdOutForDelivery200 = {
  message?: string;
};

export type PostVendorOrdersOrderIdOutForDelivery401 = {
  message?: string;
};

export type PostVendorOrdersOrderIdOutForDelivery403 = {
  message?: string;
};

export type PostVendorOrdersOrderIdDelivered200 = {
  message?: string;
};

export type PostVendorOrdersOrderIdDelivered401 = {
  message?: string;
};

export type PostVendorOrdersOrderIdDelivered403 = {
  message?: string;
};

export type PostVendorPaymentAccountBody = {
  vendorId: string;
  storeId: string;
  bankCode: string;
  accountNumber: string;
  accountName: string;
  businessName: string;
  businessEmail: string;
  businessPhone?: string;
  businessAddress?: string;
};

export type PostVendorPaymentAccount200AccountMetadata = { [key: string]: unknown };

export type PostVendorPaymentAccount200Account = {
  id?: string;
  domain?: string;
  subaccount_code?: string;
  business_name?: string;
  description?: string;
  primary_contact_name?: string;
  primary_contact_email?: string;
  primary_contact_phone?: string;
  metadata?: PostVendorPaymentAccount200AccountMetadata;
  percentage_charge?: number;
  settlement_bank?: string;
  account_number?: string;
  account_name?: string;
  settlement_schedule?: string;
  active?: boolean;
  currency?: string;
  type?: string;
  is_verified?: boolean;
  verification_fields?: unknown[];
  created_at?: string;
  updated_at?: string;
};

export type PostVendorPaymentAccount200 = {
  success?: boolean;
  message?: string;
  account?: PostVendorPaymentAccount200Account;
};

export type PostVendorPaymentAccount400 = {
  message?: string;
};

export type PostVendorPaymentAccount401 = {
  message?: string;
};

export type PostVendorPaymentAccount403 = {
  message?: string;
};

export type PostVendorPaymentAccountFromApplicationBody = { [key: string]: unknown };

export type PostVendorPaymentAccountFromApplication200Account = {
  accountCode?: string;
  accountId?: string;
  status?: string;
};

export type PostVendorPaymentAccountFromApplication200 = {
  success?: boolean;
  message?: string;
  account?: PostVendorPaymentAccountFromApplication200Account;
};

export type PostVendorPaymentAccountFromApplication400 = {
  message?: string;
};

export type PostVendorPaymentAccountFromApplication401 = {
  message?: string;
};

export type PostVendorPaymentAccountFromApplication404 = {
  message?: string;
};

export type GetVendorPaymentEarningsParams = {
startDate?: string;
endDate?: string;
page?: number;
perPage?: number;
};

export type GetVendorPaymentEarnings200PayoutsItem = {
  id?: string;
  orderId?: string;
  amount?: number;
  platformFee?: number;
  status?: string;
  createdAt?: string;
};

export type GetVendorPaymentEarnings200 = {
  totalEarnings?: number;
  totalPayouts?: number;
  pendingPayouts?: number;
  platformFees?: number;
  payouts?: GetVendorPaymentEarnings200PayoutsItem[];
};

export type GetVendorPaymentEarnings401 = {
  message?: string;
};

export type GetVendorPaymentPayoutsHistoryParams = {
page?: number;
perPage?: number;
status?: string;
startDate?: string;
endDate?: string;
};

export type GetVendorPaymentPayoutsHistory200PayoutsItemOrder = {
  paymentReference?: string;
};

export type GetVendorPaymentPayoutsHistory200PayoutsItem = {
  id?: string;
  orderId?: string;
  amount?: number;
  platformFee?: number;
  status?: string;
  createdAt?: string;
  processedAt?: string;
  order?: GetVendorPaymentPayoutsHistory200PayoutsItemOrder;
};

export type GetVendorPaymentPayoutsHistory200Pagination = {
  page?: number;
  perPage?: number;
  total?: number;
  totalPages?: number;
};

export type GetVendorPaymentPayoutsHistory200 = {
  payouts?: GetVendorPaymentPayoutsHistory200PayoutsItem[];
  pagination?: GetVendorPaymentPayoutsHistory200Pagination;
};

export type GetVendorPaymentPayoutsHistory401 = {
  message?: string;
};

export type GetVendorMetricsParams = {
/**
 * @minimum 1
 * @maximum 365
 */
days?: number;
startDate?: string;
endDate?: string;
};

export type GetVendorMetrics200ByStatusItem = {
  status?: string;
  count?: number;
  revenue?: number;
};

export type GetVendorMetrics200DailySalesItem = {
  date?: string;
  orders?: number;
  revenue?: number;
};

export type GetVendorMetrics200 = {
  period?: string;
  totalOrders?: number;
  totalRevenue?: number;
  byStatus?: GetVendorMetrics200ByStatusItem[];
  dailySales?: GetVendorMetrics200DailySalesItem[];
};

export type GetAnalyticsBestSellers200ItemsItemStore = {
  id?: string;
  name?: string;
  slug?: string;
};

export type GetAnalyticsBestSellers200ItemsItemSalesData = {
  totalSold?: number;
  totalRevenue?: number;
  averagePrice?: number;
};

export type GetAnalyticsBestSellers200ItemsItem = {
  id?: string;
  name?: string;
  price?: number;
  stock?: number;
  imageUrl?: string;
  store?: GetAnalyticsBestSellers200ItemsItemStore;
  salesData?: GetAnalyticsBestSellers200ItemsItemSalesData;
};

export type GetAnalyticsBestSellers200Meta = {
  total?: number;
};

export type GetAnalyticsBestSellers200 = {
  period?: string;
  items?: GetAnalyticsBestSellers200ItemsItem[];
  meta?: GetAnalyticsBestSellers200Meta;
};

export type GetAnalyticsStoresSlugBestSellers200Store = {
  id?: string;
  name?: string;
  slug?: string;
};

export type GetAnalyticsStoresSlugBestSellers200ItemsItemSalesData = {
  totalSold?: number;
  totalRevenue?: number;
  averagePrice?: number;
};

export type GetAnalyticsStoresSlugBestSellers200ItemsItem = {
  id?: string;
  name?: string;
  price?: number;
  stock?: number;
  imageUrl?: string;
  salesData?: GetAnalyticsStoresSlugBestSellers200ItemsItemSalesData;
};

export type GetAnalyticsStoresSlugBestSellers200Meta = {
  total?: number;
};

export type GetAnalyticsStoresSlugBestSellers200 = {
  store?: GetAnalyticsStoresSlugBestSellers200Store;
  period?: string;
  items?: GetAnalyticsStoresSlugBestSellers200ItemsItem[];
  meta?: GetAnalyticsStoresSlugBestSellers200Meta;
};

export type GetAnalyticsStoresSlugBestSellers404 = {
  message?: string;
};

export type GetAnalyticsFeatured200ItemsItemStore = {
  id?: string;
  name?: string;
  slug?: string;
};

export type GetAnalyticsFeatured200ItemsItemSalesData = {
  totalSold?: number;
  totalRevenue?: number;
  averagePrice?: number;
};

export type GetAnalyticsFeatured200ItemsItem = {
  id?: string;
  name?: string;
  price?: number;
  stock?: number;
  imageUrl?: string;
  store?: GetAnalyticsFeatured200ItemsItemStore;
  salesData?: GetAnalyticsFeatured200ItemsItemSalesData;
};

export type GetAnalyticsFeatured200Meta = {
  total?: number;
  period?: string;
};

export type GetAnalyticsFeatured200 = {
  items?: GetAnalyticsFeatured200ItemsItem[];
  meta?: GetAnalyticsFeatured200Meta;
};

export type PostUploadPresignedUrlBody = {
  /**
   * Original filename with extension
   * @minLength 1
   */
  fileName: string;
  /**
   * MIME type (must start with image/)
   * @pattern ^image/
   */
  contentType: string;
  /**
   * File size in bytes (max 10MB)
   * @maximum 10485760
   */
  fileSize: number;
};

export type PostUploadPresignedUrl200 = {
  /** Presigned URL for uploading the file */
  uploadUrl: string;
  /** Public URL where the file will be accessible */
  fileUrl: string;
  /** Generated unique filename */
  fileName: string;
  /** URL expiration time in seconds */
  expiresIn: number;
};

export type PostUploadPresignedUrl400 = {
  message?: string;
  error?: string;
};

export type PostUploadPresignedUrl401 = {
  message?: string;
};

export type PostUploadPresignedUrl403 = {
  message?: string;
};

export type DeleteUploadDeleteBody = {
  /**
   * Filename to delete
   * @minLength 1
   */
  fileName: string;
};

export type DeleteUploadDelete200 = {
  message?: string;
};

export type DeleteUploadDelete400 = {
  message?: string;
  error?: string;
};

export type DeleteUploadDelete401 = {
  message?: string;
};

export type DeleteUploadDelete403 = {
  message?: string;
};

export type PostVendorProductsProductIdImagesBodyItem = {
  /** @minLength 1 */
  fileName: string;
  fileUrl: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
};

export type PostVendorProductsProductIdImages201 = {
  message?: string;
  addedCount?: number;
};

export type PostVendorProductsProductIdImages401 = {
  message?: string;
};

export type PostVendorProductsProductIdImages403 = {
  message?: string;
};

export type PostVendorProductsProductIdImages404 = {
  message?: string;
};

export type GetVendorProductsProductIdImages200Item = {
  id?: string;
  productId?: string;
  fileName?: string;
  fileUrl?: string;
  altText?: string;
  isPrimary?: boolean;
  sortOrder?: number;
  createdAt?: string;
};

export type GetVendorProductsProductIdImages401 = {
  message?: string;
};

export type GetVendorProductsProductIdImages403 = {
  message?: string;
};

export type PutVendorProductsProductIdImagesImageIdBody = {
  /** @minLength 1 */
  fileName?: string;
  fileUrl?: string;
  altText?: string;
  isPrimary?: boolean;
  /** @minimum 0 */
  sortOrder?: number;
};

export type PutVendorProductsProductIdImagesImageId200 = {
  id?: string;
  productId?: string;
  fileName?: string;
  fileUrl?: string;
  altText?: string;
  isPrimary?: boolean;
  sortOrder?: number;
  createdAt?: string;
};

export type PutVendorProductsProductIdImagesImageId401 = {
  message?: string;
};

export type PutVendorProductsProductIdImagesImageId403 = {
  message?: string;
};

export type PutVendorProductsProductIdImagesImageId404 = {
  message?: string;
};

export type DeleteVendorProductsProductIdImagesImageId401 = {
  message?: string;
};

export type DeleteVendorProductsProductIdImagesImageId403 = {
  message?: string;
};

export type DeleteVendorProductsProductIdImagesImageId404 = {
  message?: string;
};

export type PutVendorProductsProductIdImagesReorderBody = {
  /**
   * Array of image IDs in desired order
   * @minItems 1
   */
  imageIds: string[];
};

export type PutVendorProductsProductIdImagesReorder200 = {
  message?: string;
};

export type PutVendorProductsProductIdImagesReorder400 = {
  message?: string;
};

export type PutVendorProductsProductIdImagesReorder401 = {
  message?: string;
};

export type PutVendorProductsProductIdImagesReorder403 = {
  message?: string;
};

export type PutVendorProductsProductIdImagesReorder404 = {
  message?: string;
};

export type PostCartItemsBody = {
  /** @minLength 1 */
  productId: string;
  /**
   * @maximum 100
   */
  quantity: number;
};

export type PostCartItems200ItemUpdatedAt = string | null;

export type PostCartItems200ItemProduct = {
  id: string;
  name: string;
  price: number;
  imageUrl: string;
};

export type PostCartItems200Item = {
  id: string;
  productId: string;
  quantity: number;
  createdAt: string;
  updatedAt: PostCartItems200ItemUpdatedAt;
  product: PostCartItems200ItemProduct;
};

export type PostCartItems200 = {
  message: string;
  item: PostCartItems200Item;
};

export type PutCartItemsProductIdBody = {
  /**
   * @maximum 100
   */
  quantity: number;
};

export type PutCartItemsProductId200ItemUpdatedAt = string | null;

export type PutCartItemsProductId200ItemProduct = {
  id: string;
  name: string;
  price: number;
  imageUrl: string;
};

export type PutCartItemsProductId200Item = {
  id: string;
  productId: string;
  quantity: number;
  createdAt: string;
  updatedAt: PutCartItemsProductId200ItemUpdatedAt;
  product: PutCartItemsProductId200ItemProduct;
};

export type PutCartItemsProductId200 = {
  message: string;
  item: PutCartItemsProductId200Item;
};

export type DeleteCartItemsProductId200 = {
  message: string;
};

export type GetCart200ItemsItemUpdatedAt = string | null;

export type GetCart200ItemsItemProduct = {
  id: string;
  name: string;
  price: number;
  imageUrl: string;
};

export type GetCart200ItemsItem = {
  id: string;
  productId: string;
  quantity: number;
  createdAt: string;
  updatedAt: GetCart200ItemsItemUpdatedAt;
  product: GetCart200ItemsItemProduct;
};

export type GetCart200 = {
  items: GetCart200ItemsItem[];
  totalItems: number;
  subtotal: number;
  estimatedTax: number;
  estimatedShipping: number;
  total: number;
};

export type DeleteCart200 = {
  message: string;
};

export type GetEnhancedCartParams = {
syncData?: string;
};

export type GetEnhancedCart200CartItemsItemUpdatedAt = string | null;

export type GetEnhancedCart200CartItemsItemProduct = {
  id: string;
  name: string;
  price: number;
  imageUrl: string;
};

export type GetEnhancedCart200CartItemsItem = {
  id: string;
  productId: string;
  quantity: number;
  createdAt: string;
  updatedAt: GetEnhancedCart200CartItemsItemUpdatedAt;
  product: GetEnhancedCart200CartItemsItemProduct;
};

export type GetEnhancedCart200Cart = {
  items: GetEnhancedCart200CartItemsItem[];
  totalItems: number;
  subtotal: number;
  estimatedTax: number;
  estimatedShipping: number;
  total: number;
};

export type GetEnhancedCart200SyncDataLocalItemsItem = {
  productId: string;
  quantity: number;
  addedAt: number;
};

export type GetEnhancedCart200SyncData = {
  localItems: GetEnhancedCart200SyncDataLocalItemsItem[];
  lastSync: number;
  userId?: string;
};

export type GetEnhancedCart200 = {
  cart: GetEnhancedCart200Cart;
  needsSync: boolean;
  localItemCount: number;
  syncData?: GetEnhancedCart200SyncData;
};

export type PostEnhancedCartItemsBody = {
  productId: string;
  /**
   * @maximum 100
   */
  quantity: number;
};

export type PostEnhancedCartItems200CartItemsItemUpdatedAt = string | null;

export type PostEnhancedCartItems200CartItemsItemProduct = {
  id: string;
  name: string;
  price: number;
  imageUrl: string;
};

export type PostEnhancedCartItems200CartItemsItem = {
  id: string;
  productId: string;
  quantity: number;
  createdAt: string;
  updatedAt: PostEnhancedCartItems200CartItemsItemUpdatedAt;
  product: PostEnhancedCartItems200CartItemsItemProduct;
};

export type PostEnhancedCartItems200Cart = {
  items: PostEnhancedCartItems200CartItemsItem[];
  totalItems: number;
  subtotal: number;
  estimatedTax: number;
  estimatedShipping: number;
  total: number;
};

export type PostEnhancedCartItems200SyncDataLocalItemsItem = {
  productId: string;
  quantity: number;
  addedAt: number;
};

export type PostEnhancedCartItems200SyncData = {
  localItems: PostEnhancedCartItems200SyncDataLocalItemsItem[];
  lastSync: number;
  userId?: string;
};

export type PostEnhancedCartItems200 = {
  cart: PostEnhancedCartItems200Cart;
  needsSync: boolean;
  localItemCount: number;
  syncData?: PostEnhancedCartItems200SyncData;
};

export type PutEnhancedCartItemsProductIdBody = {
  /**
   * @maximum 100
   */
  quantity: number;
};

export type PutEnhancedCartItemsProductId200CartItemsItemUpdatedAt = string | null;

export type PutEnhancedCartItemsProductId200CartItemsItemProduct = {
  id: string;
  name: string;
  price: number;
  imageUrl: string;
};

export type PutEnhancedCartItemsProductId200CartItemsItem = {
  id: string;
  productId: string;
  quantity: number;
  createdAt: string;
  updatedAt: PutEnhancedCartItemsProductId200CartItemsItemUpdatedAt;
  product: PutEnhancedCartItemsProductId200CartItemsItemProduct;
};

export type PutEnhancedCartItemsProductId200Cart = {
  items: PutEnhancedCartItemsProductId200CartItemsItem[];
  totalItems: number;
  subtotal: number;
  estimatedTax: number;
  estimatedShipping: number;
  total: number;
};

export type PutEnhancedCartItemsProductId200SyncDataLocalItemsItem = {
  productId: string;
  quantity: number;
  addedAt: number;
};

export type PutEnhancedCartItemsProductId200SyncData = {
  localItems: PutEnhancedCartItemsProductId200SyncDataLocalItemsItem[];
  lastSync: number;
  userId?: string;
};

export type PutEnhancedCartItemsProductId200 = {
  cart: PutEnhancedCartItemsProductId200Cart;
  needsSync: boolean;
  localItemCount: number;
  syncData?: PutEnhancedCartItemsProductId200SyncData;
};

export type DeleteEnhancedCartItemsProductId200CartItemsItemUpdatedAt = string | null;

export type DeleteEnhancedCartItemsProductId200CartItemsItemProduct = {
  id: string;
  name: string;
  price: number;
  imageUrl: string;
};

export type DeleteEnhancedCartItemsProductId200CartItemsItem = {
  id: string;
  productId: string;
  quantity: number;
  createdAt: string;
  updatedAt: DeleteEnhancedCartItemsProductId200CartItemsItemUpdatedAt;
  product: DeleteEnhancedCartItemsProductId200CartItemsItemProduct;
};

export type DeleteEnhancedCartItemsProductId200Cart = {
  items: DeleteEnhancedCartItemsProductId200CartItemsItem[];
  totalItems: number;
  subtotal: number;
  estimatedTax: number;
  estimatedShipping: number;
  total: number;
};

export type DeleteEnhancedCartItemsProductId200SyncDataLocalItemsItem = {
  productId: string;
  quantity: number;
  addedAt: number;
};

export type DeleteEnhancedCartItemsProductId200SyncData = {
  localItems: DeleteEnhancedCartItemsProductId200SyncDataLocalItemsItem[];
  lastSync: number;
  userId?: string;
};

export type DeleteEnhancedCartItemsProductId200 = {
  cart: DeleteEnhancedCartItemsProductId200Cart;
  needsSync: boolean;
  localItemCount: number;
  syncData?: DeleteEnhancedCartItemsProductId200SyncData;
};

export type PostEnhancedCartSyncBodyLocalItemsItem = {
  productId: string;
  quantity: number;
};

export type PostEnhancedCartSyncBody = {
  localItems: PostEnhancedCartSyncBodyLocalItemsItem[];
};

export type PostEnhancedCartSync200CartItemsItemUpdatedAt = string | null;

export type PostEnhancedCartSync200CartItemsItemProduct = {
  id: string;
  name: string;
  price: number;
  imageUrl: string;
};

export type PostEnhancedCartSync200CartItemsItem = {
  id: string;
  productId: string;
  quantity: number;
  createdAt: string;
  updatedAt: PostEnhancedCartSync200CartItemsItemUpdatedAt;
  product: PostEnhancedCartSync200CartItemsItemProduct;
};

export type PostEnhancedCartSync200Cart = {
  items: PostEnhancedCartSync200CartItemsItem[];
  totalItems: number;
  subtotal: number;
  estimatedTax: number;
  estimatedShipping: number;
  total: number;
};

export type PostEnhancedCartSync200SyncDataLocalItemsItem = {
  productId: string;
  quantity: number;
  addedAt: number;
};

export type PostEnhancedCartSync200SyncData = {
  localItems: PostEnhancedCartSync200SyncDataLocalItemsItem[];
  lastSync: number;
  userId?: string;
};

export type PostEnhancedCartSync200 = {
  cart: PostEnhancedCartSync200Cart;
  needsSync: boolean;
  localItemCount: number;
  syncData?: PostEnhancedCartSync200SyncData;
};

export type GetEnhancedCartStats200 = {
  totalItems: number;
  uniqueProducts: number;
  estimatedTotal: number;
  lastUpdated: string;
};

export type PostOrdersBodyShippingAddress = {
  street: string;
  city: string;
  state: string;
  postalCode: string;
  country?: string;
};

export type PostOrdersBodyBillingAddress = {
  street?: string;
  city?: string;
  state?: string;
  postalCode?: string;
  country?: string;
};

export type PostOrdersBody = {
  storeId: string;
  shippingAddress: PostOrdersBodyShippingAddress;
  billingAddress?: PostOrdersBodyBillingAddress;
  notes?: string;
};

export type PostOrders200OrderItemsItem = {
  id?: string;
  productId?: string;
  quantity?: number;
  price?: number;
  total?: number;
};

export type PostOrders200Order = {
  id?: string;
  status?: string;
  paymentStatus?: string;
  total?: number;
  items?: PostOrders200OrderItemsItem[];
};

export type PostOrders200 = {
  message?: string;
  order?: PostOrders200Order;
};

export type GetOrdersParams = {
/**
 * Search query
 */
q?: string;
/**
 * 1-based page number
 * @pattern ^\d+$
 */
page?: string;
/**
 * Number of items per page
 * @pattern ^\d+$
 */
limit?: string;
storeId?: string;
status?: GetOrdersStatus;
startDate?: string;
endDate?: string;
};

export type GetOrdersStatus = typeof GetOrdersStatus[keyof typeof GetOrdersStatus];


export const GetOrdersStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CONFIRMED: 'CONFIRMED',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED',
} as const;

export type GetOrders200OrdersItem = {
  id?: string;
  status?: string;
  paymentStatus?: string;
  total?: number;
  createdAt?: string;
};

export type GetOrders200Pagination = {
  page?: number;
  limit?: number;
  total?: number;
  totalPages?: number;
};

export type GetOrders200 = {
  orders?: GetOrders200OrdersItem[];
  pagination?: GetOrders200Pagination;
};

export type GetOrdersOrderId200OrderItemsItemProduct = {
  id?: string;
  name?: string;
  imageUrl?: string;
};

export type GetOrdersOrderId200OrderItemsItem = {
  id?: string;
  productId?: string;
  quantity?: number;
  price?: number;
  total?: number;
  product?: GetOrdersOrderId200OrderItemsItemProduct;
};

export type GetOrdersOrderId200Order = {
  id?: string;
  status?: string;
  paymentStatus?: string;
  total?: number;
  subtotal?: number;
  tax?: number;
  shipping?: number;
  currency?: string;
  createdAt?: string;
  items?: GetOrdersOrderId200OrderItemsItem[];
};

export type GetOrdersOrderId200 = {
  order?: GetOrdersOrderId200Order;
};

export type DeleteOrdersOrderIdBody = {
  reason?: string;
};

export type DeleteOrdersOrderId200Order = {
  id?: string;
  status?: string;
  cancelledAt?: string;
};

export type DeleteOrdersOrderId200 = {
  message?: string;
  order?: DeleteOrdersOrderId200Order;
};

export type PatchVendorOrdersOrderIdStatusBody = {
  status: string;
  reason?: string;
};

export type PatchVendorOrdersOrderIdStatus200Order = {
  id?: string;
  status?: string;
  updatedAt?: string;
};

export type PatchVendorOrdersOrderIdStatus200 = {
  message?: string;
  order?: PatchVendorOrdersOrderIdStatus200Order;
};

export type GetVendorOrdersParams = {
/**
 * Search query
 */
q?: string;
/**
 * 1-based page number
 * @pattern ^\d+$
 */
page?: string;
/**
 * Number of items per page
 * @pattern ^\d+$
 */
limit?: string;
storeId?: string;
status?: GetVendorOrdersStatus;
startDate?: string;
endDate?: string;
};

export type GetVendorOrdersStatus = typeof GetVendorOrdersStatus[keyof typeof GetVendorOrdersStatus];


export const GetVendorOrdersStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CONFIRMED: 'CONFIRMED',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED',
} as const;

export type GetVendorOrders200OrdersItemCustomer = {
  id?: string;
  email?: string;
  firstName?: string;
  lastName?: string;
};

export type GetVendorOrders200OrdersItem = {
  id?: string;
  status?: string;
  paymentStatus?: string;
  total?: number;
  customer?: GetVendorOrders200OrdersItemCustomer;
  createdAt?: string;
};

export type GetVendorOrders200Pagination = {
  page?: number;
  limit?: number;
  total?: number;
  totalPages?: number;
};

export type GetVendorOrders200 = {
  orders?: GetVendorOrders200OrdersItem[];
  pagination?: GetVendorOrders200Pagination;
};

export type GetVendorOrdersStatsParams = {
/**
 * @minimum 1
 * @maximum 365
 */
days?: number;
};

export type GetVendorOrdersStats200ByStatusItem = {
  status?: string;
  count?: number;
  revenue?: number;
};

export type GetVendorOrdersStats200 = {
  period?: string;
  totalOrders?: number;
  totalRevenue?: number;
  byStatus?: GetVendorOrdersStats200ByStatusItem[];
};

export type GetCustomerOrdersParams = {
/**
 * Search query
 */
q?: string;
/**
 * 1-based page number
 * @pattern ^\d+$
 */
page?: string;
/**
 * Number of items per page
 * @pattern ^\d+$
 */
limit?: string;
/**
 * Filter orders by status
 */
status?: GetCustomerOrdersStatus;
};

export type GetCustomerOrdersStatus = typeof GetCustomerOrdersStatus[keyof typeof GetCustomerOrdersStatus];


export const GetCustomerOrdersStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
} as const;

export type GetCustomerOrders200DataOrdersItemUpdatedAt = string | null;

export type GetCustomerOrders200DataOrdersItemStore = {
  id: string;
  name: string;
};

export type GetCustomerOrders200DataOrdersItemItemsItemProduct = {
  id: string;
  name: string;
  imageUrl: string;
};

export type GetCustomerOrders200DataOrdersItemItemsItem = {
  id: string;
  productId: string;
  quantity: number;
  price: number;
  product: GetCustomerOrders200DataOrdersItemItemsItemProduct;
};

export type GetCustomerOrders200DataOrdersItem = {
  id: string;
  status: string;
  paymentStatus: string;
  total: number;
  createdAt: string;
  updatedAt: GetCustomerOrders200DataOrdersItemUpdatedAt;
  store: GetCustomerOrders200DataOrdersItemStore;
  items: GetCustomerOrders200DataOrdersItemItemsItem[];
};

export type GetCustomerOrders200DataPagination = {
  page: number;
  limit: number;
  total: number;
  totalPages: number;
};

export type GetCustomerOrders200Data = {
  orders: GetCustomerOrders200DataOrdersItem[];
  pagination: GetCustomerOrders200DataPagination;
};

export type GetCustomerOrders200 = {
  message: string;
  data: GetCustomerOrders200Data;
};

export type GetCustomerOrders400 = {
  message: string;
  error?: string;
};

export type GetCustomerOrdersOrderId200DataOrderUpdatedAt = string | null;

export type GetCustomerOrdersOrderId200DataOrderEstimatedDelivery = string | null;

export type GetCustomerOrdersOrderId200DataOrderDeliveredAt = string | null;

export type GetCustomerOrdersOrderId200DataOrderShippingAddressAnyOf = {
  street: string;
  city: string;
  state: string;
  postalCode: string;
  country: string;
};

export type GetCustomerOrdersOrderId200DataOrderShippingAddress = GetCustomerOrdersOrderId200DataOrderShippingAddressAnyOf | null;

export type GetCustomerOrdersOrderId200DataOrderBillingAddressAnyOf = {
  street: string;
  city: string;
  state: string;
  postalCode: string;
  country: string;
};

export type GetCustomerOrdersOrderId200DataOrderBillingAddress = GetCustomerOrdersOrderId200DataOrderBillingAddressAnyOf | null;

export type GetCustomerOrdersOrderId200DataOrderStore = {
  id: string;
  name: string;
  slug: string;
};

export type GetCustomerOrdersOrderId200DataOrderItemsItemProduct = {
  id: string;
  name: string;
  imageUrl: string;
};

export type GetCustomerOrdersOrderId200DataOrderItemsItem = {
  id: string;
  productId: string;
  quantity: number;
  price: number;
  product: GetCustomerOrdersOrderId200DataOrderItemsItemProduct;
};

export type GetCustomerOrdersOrderId200DataOrder = {
  id: string;
  status: string;
  paymentStatus: string;
  total: number;
  subtotal: number;
  tax: number;
  shipping: number;
  discount: number;
  currency: string;
  createdAt: string;
  updatedAt: GetCustomerOrdersOrderId200DataOrderUpdatedAt;
  estimatedDelivery: GetCustomerOrdersOrderId200DataOrderEstimatedDelivery;
  deliveredAt: GetCustomerOrdersOrderId200DataOrderDeliveredAt;
  shippingAddress: GetCustomerOrdersOrderId200DataOrderShippingAddress;
  billingAddress: GetCustomerOrdersOrderId200DataOrderBillingAddress;
  store: GetCustomerOrdersOrderId200DataOrderStore;
  items: GetCustomerOrdersOrderId200DataOrderItemsItem[];
};

export type GetCustomerOrdersOrderId200Data = {
  order: GetCustomerOrdersOrderId200DataOrder;
};

export type GetCustomerOrdersOrderId200 = {
  message: string;
  data: GetCustomerOrdersOrderId200Data;
};

export type GetCustomerOrdersOrderId400 = {
  message: string;
  error?: string;
};

export type GetCustomerOrdersOrderIdTracking200DataEstimatedDelivery = string | null;

export type GetCustomerOrdersOrderIdTracking200DataDeliveredAt = string | null;

export type GetCustomerOrdersOrderIdTracking200DataTrackingEventsItem = {
  eventType: string;
  description: string;
  timestamp: string;
};

export type GetCustomerOrdersOrderIdTracking200DataDeliveryUpdatesItemLocation = string | null;

export type GetCustomerOrdersOrderIdTracking200DataDeliveryUpdatesItem = {
  status: string;
  location: GetCustomerOrdersOrderIdTracking200DataDeliveryUpdatesItemLocation;
  timestamp: string;
  description: string;
};

export type GetCustomerOrdersOrderIdTracking200Data = {
  orderId: string;
  status: string;
  paymentStatus: string;
  estimatedDelivery: GetCustomerOrdersOrderIdTracking200DataEstimatedDelivery;
  deliveredAt: GetCustomerOrdersOrderIdTracking200DataDeliveredAt;
  currentLocation: string;
  trackingEvents: GetCustomerOrdersOrderIdTracking200DataTrackingEventsItem[];
  deliveryUpdates: GetCustomerOrdersOrderIdTracking200DataDeliveryUpdatesItem[];
};

export type GetCustomerOrdersOrderIdTracking200 = {
  message: string;
  data: GetCustomerOrdersOrderIdTracking200Data;
};

export type GetCustomerOrdersOrderIdTracking400 = {
  message: string;
  error?: string;
};

export type GetCustomerStats200Data = {
  totalOrders: number;
  totalSpent: number;
  averageOrderValue: number;
  ordersThisMonth: number;
};

export type GetCustomerStats200 = {
  message: string;
  data: GetCustomerStats200Data;
};

export type GetCustomerStats400 = {
  message: string;
  error?: string;
};

export type GetCustomerDashboardParams = {
period?: GetCustomerDashboardPeriod;
};

export type GetCustomerDashboardPeriod = typeof GetCustomerDashboardPeriod[keyof typeof GetCustomerDashboardPeriod];


export const GetCustomerDashboardPeriod = {
  '7d': '7d',
  '30d': '30d',
  '90d': '90d',
  '1y': '1y',
  all: 'all',
} as const;

export type GetCustomerDashboard200FavoriteStoresItem = {
  storeId?: string;
  storeName?: string;
  orderCount?: number;
  totalSpent?: number;
};

export type GetCustomerDashboard200RecentActivityItem = {
  eventType?: string;
  description?: string;
  timestamp?: string;
  orderId?: string;
  orderTotal?: number;
  storeName?: string;
};

export type GetCustomerDashboard200OrderStatusBreakdown = {
  pending?: number;
  processing?: number;
  shipped?: number;
  delivered?: number;
  cancelled?: number;
};

export type GetCustomerDashboard200 = {
  totalOrders?: number;
  totalSpent?: number;
  averageOrderValue?: number;
  ordersThisMonth?: number;
  spendingThisMonth?: number;
  favoriteStores?: GetCustomerDashboard200FavoriteStoresItem[];
  recentActivity?: GetCustomerDashboard200RecentActivityItem[];
  orderStatusBreakdown?: GetCustomerDashboard200OrderStatusBreakdown;
};

export type GetCustomerDashboard401 = {
  message?: string;
};

export type GetCustomerAnalyticsParams = {
/**
 * @minimum 1
 * @maximum 365
 */
days?: number;
};

export type GetCustomerAnalytics200OrderTrendsItem = {
  date?: string;
  orderCount?: number;
};

export type GetCustomerAnalytics200SpendingTrendsItem = {
  date?: string;
  amount?: number;
};

export type GetCustomerAnalytics200CategoryBreakdownItem = {
  productId?: string;
  quantity?: number;
};

export type GetCustomerAnalytics200 = {
  orderTrends?: GetCustomerAnalytics200OrderTrendsItem[];
  spendingTrends?: GetCustomerAnalytics200SpendingTrendsItem[];
  categoryBreakdown?: GetCustomerAnalytics200CategoryBreakdownItem[];
};

export type GetCustomerAnalytics401 = {
  message?: string;
};

export type GetCustomerPreferences200SpendingPatterns = {
  averageOrderValue?: number;
  preferredOrderDay?: string;
  preferredOrderTime?: string;
  totalSpent?: number;
};

export type GetCustomerPreferences200FavoriteProductsItem = {
  productId?: string;
  productName?: string;
  purchaseCount?: number;
  lastPurchased?: string;
};

export type GetCustomerPreferences200PreferredStoresItem = {
  storeId?: string;
  storeName?: string;
  orderCount?: number;
  totalSpent?: number;
  averageRating?: number;
};

export type GetCustomerPreferences200ShoppingBehavior = {
  mostActiveMonth?: string;
  averageItemsPerOrder?: number;
  preferredCategories?: string[];
  returnRate?: number;
};

export type GetCustomerPreferences200 = {
  spendingPatterns?: GetCustomerPreferences200SpendingPatterns;
  favoriteProducts?: GetCustomerPreferences200FavoriteProductsItem[];
  preferredStores?: GetCustomerPreferences200PreferredStoresItem[];
  shoppingBehavior?: GetCustomerPreferences200ShoppingBehavior;
};

export type GetCustomerPreferences401 = {
  message?: string;
};

export type GetNotifications200DataNotificationsItemMetadataAnyOf = {[key: string]: string};

export type GetNotifications200DataNotificationsItemMetadata = GetNotifications200DataNotificationsItemMetadataAnyOf | null;

export type GetNotifications200DataNotificationsItemUpdatedAt = string | null;

export type GetNotifications200DataNotificationsItem = {
  id: string;
  userId: string;
  type: string;
  title: string;
  message: string;
  isRead: boolean;
  metadata: GetNotifications200DataNotificationsItemMetadata;
  createdAt: string;
  updatedAt: GetNotifications200DataNotificationsItemUpdatedAt;
};

export type GetNotifications200DataPagination = {
  page: number;
  limit: number;
  total: number;
  totalPages: number;
};

export type GetNotifications200Data = {
  notifications: GetNotifications200DataNotificationsItem[];
  pagination: GetNotifications200DataPagination;
};

export type GetNotifications200 = {
  message: string;
  data: GetNotifications200Data;
};

export type GetNotifications400 = {
  message: string;
  error?: string;
};

export type PatchNotificationsNotificationIdRead200DataNotificationMetadataAnyOf = {[key: string]: string};

export type PatchNotificationsNotificationIdRead200DataNotificationMetadata = PatchNotificationsNotificationIdRead200DataNotificationMetadataAnyOf | null;

export type PatchNotificationsNotificationIdRead200DataNotificationUpdatedAt = string | null;

export type PatchNotificationsNotificationIdRead200DataNotification = {
  id: string;
  userId: string;
  type: string;
  title: string;
  message: string;
  isRead: boolean;
  metadata: PatchNotificationsNotificationIdRead200DataNotificationMetadata;
  createdAt: string;
  updatedAt: PatchNotificationsNotificationIdRead200DataNotificationUpdatedAt;
};

export type PatchNotificationsNotificationIdRead200Data = {
  notification: PatchNotificationsNotificationIdRead200DataNotification;
};

export type PatchNotificationsNotificationIdRead200 = {
  message: string;
  data: PatchNotificationsNotificationIdRead200Data;
};

export type PatchNotificationsNotificationIdRead400 = {
  message: string;
  error?: string;
};

export type PatchNotificationsReadAll200Data = {
  updatedCount: number;
};

export type PatchNotificationsReadAll200 = {
  message: string;
  data: PatchNotificationsReadAll200Data;
};

export type PatchNotificationsReadAll400 = {
  message: string;
  error?: string;
};

export type GetNotificationsUnreadCount200Data = {
  unreadCount: number;
};

export type GetNotificationsUnreadCount200 = {
  message: string;
  data: GetNotificationsUnreadCount200Data;
};

export type GetNotificationsUnreadCount400 = {
  message: string;
  error?: string;
};

export type GetSuperSystemOverviewParams = {
/**
 * Start date for overview (ISO format)
 */
startDate?: string;
/**
 * End date for overview (ISO format)
 */
endDate?: string;
};

export type GetSuperSystemOverview200OverviewPeriod = {
  startDate?: string;
  endDate?: string;
};

export type GetSuperSystemOverview200Overview = {
  totalUsers?: number;
  totalVendors?: number;
  totalStores?: number;
  totalProducts?: number;
  totalOrders?: number;
  totalRevenue?: number;
  totalPayouts?: number;
  period?: GetSuperSystemOverview200OverviewPeriod;
};

export type GetSuperSystemOverview200RecentActivityUsersItem = { [key: string]: unknown };

export type GetSuperSystemOverview200RecentActivityOrdersItem = { [key: string]: unknown };

export type GetSuperSystemOverview200RecentActivity = {
  users?: GetSuperSystemOverview200RecentActivityUsersItem[];
  orders?: GetSuperSystemOverview200RecentActivityOrdersItem[];
};

export type GetSuperSystemOverview200SystemHealth = {
  database?: string;
  activeStores?: number;
  lowStockProducts?: number;
  pendingPayouts?: number;
  timestamp?: string;
};

export type GetSuperSystemOverview200 = {
  overview?: GetSuperSystemOverview200Overview;
  recentActivity?: GetSuperSystemOverview200RecentActivity;
  systemHealth?: GetSuperSystemOverview200SystemHealth;
};

export type GetSuperVendorsParams = {
/**
 * Page number
 * @minimum 1
 */
page?: number;
/**
 * Items per page
 * @minimum 1
 * @maximum 100
 */
limit?: number;
/**
 * Search vendors by email or store name
 */
search?: string;
/**
 * Filter by store status
 */
status?: GetSuperVendorsStatus;
};

export type GetSuperVendorsStatus = typeof GetSuperVendorsStatus[keyof typeof GetSuperVendorsStatus];


export const GetSuperVendorsStatus = {
  active: 'active',
  inactive: 'inactive',
  all: 'all',
} as const;

export type GetSuperVendors200VendorsItemStoreId = string | null;

export type GetSuperVendors200VendorsItemFirstName = string | null;

export type GetSuperVendors200VendorsItemLastName = string | null;

export type GetSuperVendors200VendorsItemPhone = string | null;

export type GetSuperVendors200VendorsItemUpdatedAt = string | null;

export type GetSuperVendors200VendorsItemStore = { [key: string]: unknown };

export type GetSuperVendors200VendorsItemStats = { [key: string]: unknown };

export type GetSuperVendors200VendorsItem = {
  id?: string;
  email?: string;
  role?: string;
  storeId?: GetSuperVendors200VendorsItemStoreId;
  firstName?: GetSuperVendors200VendorsItemFirstName;
  lastName?: GetSuperVendors200VendorsItemLastName;
  phone?: GetSuperVendors200VendorsItemPhone;
  createdAt?: string;
  updatedAt?: GetSuperVendors200VendorsItemUpdatedAt;
  store?: GetSuperVendors200VendorsItemStore;
  stats?: GetSuperVendors200VendorsItemStats;
};

export type GetSuperVendors200Meta = {
  total?: number;
  page?: number;
  pageSize?: number;
  totalPages?: number;
};

export type GetSuperVendors200 = {
  vendors?: GetSuperVendors200VendorsItem[];
  meta?: GetSuperVendors200Meta;
};

export type GetSuperPaymentsOverviewParams = {
/**
 * Start date for overview (ISO format)
 */
startDate?: string;
/**
 * End date for overview (ISO format)
 */
endDate?: string;
/**
 * Filter by payout status
 */
status?: GetSuperPaymentsOverviewStatus;
};

export type GetSuperPaymentsOverviewStatus = typeof GetSuperPaymentsOverviewStatus[keyof typeof GetSuperPaymentsOverviewStatus];


export const GetSuperPaymentsOverviewStatus = {
  all: 'all',
  pending: 'pending',
  completed: 'completed',
  failed: 'failed',
} as const;

export type GetSuperPaymentsOverview200PayoutsItem = { [key: string]: unknown };

export type GetSuperPaymentsOverview200OverviewPeriod = { [key: string]: unknown };

export type GetSuperPaymentsOverview200Overview = {
  totalPayouts?: number;
  totalAmount?: number;
  period?: GetSuperPaymentsOverview200OverviewPeriod;
};

export type GetSuperPaymentsOverview200Stats = { [key: string]: unknown };

export type GetSuperPaymentsOverview200 = {
  payouts?: GetSuperPaymentsOverview200PayoutsItem[];
  overview?: GetSuperPaymentsOverview200Overview;
  stats?: GetSuperPaymentsOverview200Stats;
};

export type GetSuperVendorsVendorId200StoreId = string | null;

export type GetSuperVendorsVendorId200FirstName = string | null;

export type GetSuperVendorsVendorId200LastName = string | null;

export type GetSuperVendorsVendorId200Phone = string | null;

export type GetSuperVendorsVendorId200UpdatedAt = string | null;

export type GetSuperVendorsVendorId200Store = { [key: string]: unknown };

export type GetSuperVendorsVendorId200VendorPayoutsItem = { [key: string]: unknown };

export type GetSuperVendorsVendorId200Stats = { [key: string]: unknown };

export type GetSuperVendorsVendorId200 = {
  id?: string;
  email?: string;
  role?: string;
  storeId?: GetSuperVendorsVendorId200StoreId;
  firstName?: GetSuperVendorsVendorId200FirstName;
  lastName?: GetSuperVendorsVendorId200LastName;
  phone?: GetSuperVendorsVendorId200Phone;
  createdAt?: string;
  updatedAt?: GetSuperVendorsVendorId200UpdatedAt;
  store?: GetSuperVendorsVendorId200Store;
  vendorPayouts?: GetSuperVendorsVendorId200VendorPayoutsItem[];
  stats?: GetSuperVendorsVendorId200Stats;
};

export type GetSuperAnalytics200UserGrowthItem = { [key: string]: unknown };

export type GetSuperAnalytics200OrderGrowthItem = { [key: string]: unknown };

export type GetSuperAnalytics200RevenueGrowthItem = { [key: string]: unknown };

export type GetSuperAnalytics200TopVendorsItem = { [key: string]: unknown };

export type GetSuperAnalytics200 = {
  userGrowth?: GetSuperAnalytics200UserGrowthItem[];
  orderGrowth?: GetSuperAnalytics200OrderGrowthItem[];
  revenueGrowth?: GetSuperAnalytics200RevenueGrowthItem[];
  topVendors?: GetSuperAnalytics200TopVendorsItem[];
};

export type PostVendorOnboardingApplicationBodyBusinessType = typeof PostVendorOnboardingApplicationBodyBusinessType[keyof typeof PostVendorOnboardingApplicationBodyBusinessType];


export const PostVendorOnboardingApplicationBodyBusinessType = {
  INDIVIDUAL: 'INDIVIDUAL',
  SOLE_PROPRIETORSHIP: 'SOLE_PROPRIETORSHIP',
  PARTNERSHIP: 'PARTNERSHIP',
  LIMITED_LIABILITY_COMPANY: 'LIMITED_LIABILITY_COMPANY',
  CORPORATION: 'CORPORATION',
  COOPERATIVE: 'COOPERATIVE',
  OTHER: 'OTHER',
} as const;

export type PostVendorOnboardingApplicationBodyExpectedMonthlySales = typeof PostVendorOnboardingApplicationBodyExpectedMonthlySales[keyof typeof PostVendorOnboardingApplicationBodyExpectedMonthlySales];


export const PostVendorOnboardingApplicationBodyExpectedMonthlySales = {
  UNDER_1000: 'UNDER_1000',
  ONE_TO_FIVE_THOUSAND: 'ONE_TO_FIVE_THOUSAND',
  FIVE_TO_TEN_THOUSAND: 'FIVE_TO_TEN_THOUSAND',
  TEN_TO_FIFTY_THOUSAND: 'TEN_TO_FIFTY_THOUSAND',
  FIFTY_TO_HUNDRED_THOUSAND: 'FIFTY_TO_HUNDRED_THOUSAND',
  OVER_HUNDRED_THOUSAND: 'OVER_HUNDRED_THOUSAND',
} as const;

/**
 * @nullable
 */
export type PostVendorOnboardingApplicationBodySocialMediaLinks = {
  /** @nullable */
  facebook?: string | null;
  /** @nullable */
  instagram?: string | null;
  /** @nullable */
  twitter?: string | null;
  /** @nullable */
  linkedin?: string | null;
} | null;

export type PostVendorOnboardingApplicationBody = {
  /**
   * @minLength 2
   * @maxLength 100
   */
  businessName: string;
  businessType: PostVendorOnboardingApplicationBodyBusinessType;
  /**
   * @minLength 10
   * @maxLength 1000
   */
  businessDescription: string;
  /**
   * @minLength 10
   * @maxLength 200
   */
  businessAddress: string;
  /**
   * @minLength 10
   * @maxLength 20
   */
  businessPhone: string;
  /** @nullable */
  taxIdentification?: string | null;
  /** @pattern ^GHA-\d{9}-[A-Z]$ */
  ghanaCardNumber: string;
  /**
   * @minLength 2
   * @maxLength 100
   */
  bankName: string;
  /**
   * @minLength 10
   * @maxLength 20
   */
  bankAccountNumber: string;
  /**
   * @minLength 2
   * @maxLength 100
   */
  bankAccountName: string;
  /**
   * @minLength 3
   * @maxLength 10
   */
  bankCode: string;
  expectedMonthlySales: PostVendorOnboardingApplicationBodyExpectedMonthlySales;
  /**
   * @minItems 1
   * @maxItems 10
   * @nullable
   */
  productCategories?: string[] | null;
  /** @nullable */
  socialMediaLinks?: PostVendorOnboardingApplicationBodySocialMediaLinks;
};

export type PostVendorOnboardingApplication201Application = { [key: string]: unknown };

export type PostVendorOnboardingApplication201 = {
  message?: string;
  application?: PostVendorOnboardingApplication201Application;
};

export type PostVendorOnboardingDocumentsBodyDocumentType = typeof PostVendorOnboardingDocumentsBodyDocumentType[keyof typeof PostVendorOnboardingDocumentsBodyDocumentType];


export const PostVendorOnboardingDocumentsBodyDocumentType = {
  GHANA_CARD: 'GHANA_CARD',
} as const;

export type PostVendorOnboardingDocumentsBodySide = typeof PostVendorOnboardingDocumentsBodySide[keyof typeof PostVendorOnboardingDocumentsBodySide];


export const PostVendorOnboardingDocumentsBodySide = {
  FRONT: 'FRONT',
  BACK: 'BACK',
} as const;

export type PostVendorOnboardingDocumentsBody = {
  documentType: PostVendorOnboardingDocumentsBodyDocumentType;
  side: PostVendorOnboardingDocumentsBodySide;
  /**
   * @minLength 1
   * @maxLength 255
   */
  fileName: string;
  fileUrl: string;
  /** @minimum 1 */
  fileSize: number;
  /**
   * @minLength 1
   * @maxLength 100
   */
  mimeType: string;
};

export type PostVendorOnboardingDocuments201Document = { [key: string]: unknown };

export type PostVendorOnboardingDocuments201 = {
  message?: string;
  document?: PostVendorOnboardingDocuments201Document;
};

/**
 * @nullable
 */
export type GetVendorOnboardingDocuments200DocumentsItemSide = typeof GetVendorOnboardingDocuments200DocumentsItemSide[keyof typeof GetVendorOnboardingDocuments200DocumentsItemSide] | null;


export const GetVendorOnboardingDocuments200DocumentsItemSide = {
  FRONT: 'FRONT',
  BACK: 'BACK',
} as const;

export type GetVendorOnboardingDocuments200DocumentsItem = {
  id?: string;
  documentType?: string;
  fileName?: string;
  fileUrl?: string;
  fileSize?: number;
  mimeType?: string;
  isVerified?: boolean;
  /** @nullable */
  verificationNotes?: string | null;
  uploadedAt?: string;
  /** @nullable */
  verifiedAt?: string | null;
  /** @nullable */
  verifiedBy?: string | null;
  applicationId?: string;
  /** @nullable */
  side?: GetVendorOnboardingDocuments200DocumentsItemSide;
};

export type GetVendorOnboardingDocuments200 = {
  message?: string;
  documents?: GetVendorOnboardingDocuments200DocumentsItem[];
};

export type DeleteVendorOnboardingDocumentsDocumentId200 = {
  message?: string;
};

export type PostVendorOnboardingUploadUrlBody = {
  /**
   * Original filename with extension
   * @minLength 1
   */
  fileName: string;
  /**
   * MIME type (must start with image/)
   * @pattern ^image/
   */
  contentType: string;
  /**
   * File size in bytes (max 10MB)
   * @maximum 10485760
   */
  fileSize: number;
};

export type PostVendorOnboardingUploadUrl200 = {
  /** Presigned URL for uploading the file */
  uploadUrl: string;
  /** Public URL where the file will be accessible */
  fileUrl: string;
  /** Generated unique filename */
  fileName: string;
  /** URL expiration time in seconds */
  expiresIn: number;
};

export type GetVendorOnboardingAdminApplicationsParams = {
/**
 * Filter by application status
 */
status?: GetVendorOnboardingAdminApplicationsStatus;
/**
 * Filter by business type
 */
businessType?: GetVendorOnboardingAdminApplicationsBusinessType;
/**
 * Page number for pagination
 * @minimum 1
 */
page?: number;
/**
 * Number of items per page
 * @minimum 1
 * @maximum 100
 */
limit?: number;
/**
 * Search by business name, user email, or Ghana Card number
 */
search?: string;
};

export type GetVendorOnboardingAdminApplicationsStatus = typeof GetVendorOnboardingAdminApplicationsStatus[keyof typeof GetVendorOnboardingAdminApplicationsStatus];


export const GetVendorOnboardingAdminApplicationsStatus = {
  PENDING: 'PENDING',
  UNDER_REVIEW: 'UNDER_REVIEW',
  DOCUMENTS_REQUESTED: 'DOCUMENTS_REQUESTED',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  SUSPENDED: 'SUSPENDED',
} as const;

export type GetVendorOnboardingAdminApplicationsBusinessType = typeof GetVendorOnboardingAdminApplicationsBusinessType[keyof typeof GetVendorOnboardingAdminApplicationsBusinessType];


export const GetVendorOnboardingAdminApplicationsBusinessType = {
  INDIVIDUAL: 'INDIVIDUAL',
  SOLE_PROPRIETORSHIP: 'SOLE_PROPRIETORSHIP',
  PARTNERSHIP: 'PARTNERSHIP',
  LIMITED_LIABILITY_COMPANY: 'LIMITED_LIABILITY_COMPANY',
  CORPORATION: 'CORPORATION',
  COOPERATIVE: 'COOPERATIVE',
  OTHER: 'OTHER',
} as const;

export type GetVendorOnboardingAdminApplications200ApplicationsItem = { [key: string]: unknown };

export type GetVendorOnboardingAdminApplications200Meta = {
  total?: number;
  page?: number;
  limit?: number;
  totalPages?: number;
};

export type GetVendorOnboardingAdminApplications200 = {
  message?: string;
  applications?: GetVendorOnboardingAdminApplications200ApplicationsItem[];
  meta?: GetVendorOnboardingAdminApplications200Meta;
};

/**
 * Review decision status
 */
export type PostVendorOnboardingAdminApplicationsApplicationIdReviewBodyStatus = typeof PostVendorOnboardingAdminApplicationsApplicationIdReviewBodyStatus[keyof typeof PostVendorOnboardingAdminApplicationsApplicationIdReviewBodyStatus];


export const PostVendorOnboardingAdminApplicationsApplicationIdReviewBodyStatus = {
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  DOCUMENTS_REQUESTED: 'DOCUMENTS_REQUESTED',
  UNDER_REVIEW: 'UNDER_REVIEW',
} as const;

export type PostVendorOnboardingAdminApplicationsApplicationIdReviewBody = {
  /** Review decision status */
  status: PostVendorOnboardingAdminApplicationsApplicationIdReviewBodyStatus;
  /**
   * Review notes and comments
   * @minLength 1
   * @maxLength 1000
   */
  reviewNotes: string;
  /**
   * Reason for rejection (required if status is REJECTED)
   * @minLength 1
   * @maxLength 500
   */
  rejectionReason?: string;
};

export type PostVendorOnboardingAdminApplicationsApplicationIdReview200Application = { [key: string]: unknown };

export type PostVendorOnboardingAdminApplicationsApplicationIdReview200 = {
  message?: string;
  application?: PostVendorOnboardingAdminApplicationsApplicationIdReview200Application;
};

export type GetVendorOnboardingAdminApplicationsApplicationId200Application = { [key: string]: unknown };

export type GetVendorOnboardingAdminApplicationsApplicationId200 = {
  message?: string;
  application?: GetVendorOnboardingAdminApplicationsApplicationId200Application;
};

export type PutVendorOnboardingAdminApplicationsApplicationIdStatus200Application = { [key: string]: unknown };

export type PutVendorOnboardingAdminApplicationsApplicationIdStatus200 = {
  message?: string;
  application?: PutVendorOnboardingAdminApplicationsApplicationIdStatus200Application;
};

export type PostVendorOnboardingAdminDocumentsDocumentIdVerify200 = {
  message?: string;
};

export type GetVendorOnboardingAdminDashboard200DashboardApplicationsByStatusItem = {
  status?: string;
  count?: number;
};

export type GetVendorOnboardingAdminDashboard200DashboardApplicationsByBusinessTypeItem = {
  businessType?: string;
  count?: number;
};

export type GetVendorOnboardingAdminDashboard200DashboardRecentApplicationsItem = { [key: string]: unknown };

export type GetVendorOnboardingAdminDashboard200Dashboard = {
  totalApplications?: number;
  pendingApplications?: number;
  approvedApplications?: number;
  rejectedApplications?: number;
  averageProcessingTime?: number;
  applicationsByStatus?: GetVendorOnboardingAdminDashboard200DashboardApplicationsByStatusItem[];
  applicationsByBusinessType?: GetVendorOnboardingAdminDashboard200DashboardApplicationsByBusinessTypeItem[];
  recentApplications?: GetVendorOnboardingAdminDashboard200DashboardRecentApplicationsItem[];
};

export type GetVendorOnboardingAdminDashboard200 = {
  message?: string;
  dashboard?: GetVendorOnboardingAdminDashboard200Dashboard;
};

export type PostVendorOnboardingAdminCleanupOrphaned200 = {
  message?: string;
  cleanedApplications?: number;
  cleanedDocuments?: number;
  errors?: string[];
};

export type DeleteVendorOnboardingAdminApplicationsApplicationIdCleanup200 = {
  message?: string;
};

export type GetBankVerificationBanksParams = {
/**
 * Country code (default: nigeria)
 */
country?: string;
/**
 * Number of banks per page
 * @minimum 1
 * @maximum 100
 */
perPage?: number;
/**
 * Filter by active status
 */
active?: boolean;
};

export type GetBankVerificationBanks200BanksItem = {
  id?: number;
  name?: string;
  slug?: string;
  code?: string;
  longcode?: string;
  /** @nullable */
  gateway?: string | null;
  pay_with_bank?: boolean;
  active?: boolean;
  country?: string;
  currency?: string;
  type?: string;
  is_deleted?: boolean;
};

export type GetBankVerificationBanks200 = {
  message?: string;
  banks?: GetBankVerificationBanks200BanksItem[];
};

export type PostBankVerificationBanksVerifyBody = {
  /**
   * Bank account number (various lengths supported)
   * @minLength 1
   * @maxLength 20
   */
  accountNumber: string;
  /**
   * Bank code from the bank list
   * @minLength 3
   * @maxLength 10
   */
  bankCode: string;
};

export type PostBankVerificationBanksVerify200Verification = {
  account_number?: string;
  account_name?: string;
  bank_id?: number;
};

export type PostBankVerificationBanksVerify200 = {
  message?: string;
  verification?: PostBankVerificationBanksVerify200Verification;
};

export type GetBankVerificationBanksBankCode200Bank = {
  id?: number;
  name?: string;
  slug?: string;
  code?: string;
  longcode?: string;
  /** @nullable */
  gateway?: string | null;
  pay_with_bank?: boolean;
  active?: boolean;
  country?: string;
  currency?: string;
  type?: string;
  is_deleted?: boolean;
};

export type GetBankVerificationBanksBankCode200 = {
  message?: string;
  bank?: GetBankVerificationBanksBankCode200Bank;
};

export type GetBankVerificationBanksSearchParams = {
/**
 * Search term (bank name or code)
 * @minLength 2
 */
search: string;
};

export type GetBankVerificationBanksSearch200BanksItem = {
  id?: number;
  name?: string;
  slug?: string;
  code?: string;
  longcode?: string;
  /** @nullable */
  gateway?: string | null;
  pay_with_bank?: boolean;
  active?: boolean;
  country?: string;
  currency?: string;
  type?: string;
  is_deleted?: boolean;
};

export type GetBankVerificationBanksSearch200 = {
  message?: string;
  banks?: GetBankVerificationBanksSearch200BanksItem[];
};

